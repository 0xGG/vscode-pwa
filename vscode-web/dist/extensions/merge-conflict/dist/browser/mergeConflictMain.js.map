{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/mergeConflictMain.ts","webpack:///./src/services.ts","webpack:///external \"vscode\"","webpack:///./src/documentTracker.ts","webpack:///./src/mergeConflictParser.ts","webpack:///./src/documentMergeConflict.ts","webpack:///./src/delayer.ts","webpack:///./src/codelensProvider.ts","webpack:////home/runner/work/vscode-web/vscode-web/vscode/build/polyfills/vscode-nls.js","webpack:///./src/commandHandler.ts","webpack:///./src/contentProvider.ts","webpack:///./src/mergeDecorator.ts"],"names":[],"mappings":"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","file":"mergeConflictMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport MergeConflictServices from './services';\n\nexport function activate(context: vscode.ExtensionContext) {\n\t// Register disposables\n\tconst services = new MergeConflictServices(context);\n\tservices.begin();\n\tcontext.subscriptions.push(services);\n}\n\nexport function deactivate() {\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport DocumentTracker from './documentTracker';\nimport CodeLensProvider from './codelensProvider';\nimport CommandHandler from './commandHandler';\nimport ContentProvider from './contentProvider';\nimport Decorator from './mergeDecorator';\nimport * as interfaces from './interfaces';\n\nconst ConfigurationSectionName = 'merge-conflict';\n\nexport default class ServiceWrapper implements vscode.Disposable {\n\n\tprivate services: vscode.Disposable[] = [];\n\n\tconstructor(private context: vscode.ExtensionContext) {\n\t}\n\n\tbegin() {\n\n\t\tlet configuration = this.createExtensionConfiguration();\n\t\tconst documentTracker = new DocumentTracker();\n\n\t\tthis.services.push(\n\t\t\tdocumentTracker,\n\t\t\tnew CommandHandler(documentTracker),\n\t\t\tnew CodeLensProvider(documentTracker),\n\t\t\tnew ContentProvider(this.context),\n\t\t\tnew Decorator(this.context, documentTracker),\n\t\t);\n\n\t\tthis.services.forEach((service: any) => {\n\t\t\tif (service.begin && service.begin instanceof Function) {\n\t\t\t\tservice.begin(configuration);\n\t\t\t}\n\t\t});\n\n\t\tvscode.workspace.onDidChangeConfiguration(() => {\n\t\t\tthis.services.forEach((service: any) => {\n\t\t\t\tif (service.configurationUpdated && service.configurationUpdated instanceof Function) {\n\t\t\t\t\tservice.configurationUpdated(this.createExtensionConfiguration());\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcreateExtensionConfiguration(): interfaces.IExtensionConfiguration {\n\t\tconst workspaceConfiguration = vscode.workspace.getConfiguration(ConfigurationSectionName);\n\t\tconst codeLensEnabled: boolean = workspaceConfiguration.get('codeLens.enabled', true);\n\t\tconst decoratorsEnabled: boolean = workspaceConfiguration.get('decorators.enabled', true);\n\n\t\treturn {\n\t\t\tenableCodeLens: codeLensEnabled,\n\t\t\tenableDecorations: decoratorsEnabled,\n\t\t\tenableEditorOverview: decoratorsEnabled\n\t\t};\n\t}\n\n\tdispose() {\n\t\tthis.services.forEach(disposable => disposable.dispose());\n\t\tthis.services = [];\n\t}\n}\n\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { MergeConflictParser } from './mergeConflictParser';\nimport * as interfaces from './interfaces';\nimport { Delayer } from './delayer';\n\nclass ScanTask {\n\tpublic origins: Set<string> = new Set<string>();\n\tpublic delayTask: Delayer<interfaces.IDocumentMergeConflict[]>;\n\n\tconstructor(delayTime: number, initialOrigin: string) {\n\t\tthis.origins.add(initialOrigin);\n\t\tthis.delayTask = new Delayer<interfaces.IDocumentMergeConflict[]>(delayTime);\n\t}\n\n\tpublic addOrigin(name: string): boolean {\n\t\tif (this.origins.has(name)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic hasOrigin(name: string): boolean {\n\t\treturn this.origins.has(name);\n\t}\n}\n\nclass OriginDocumentMergeConflictTracker implements interfaces.IDocumentMergeConflictTracker {\n\tconstructor(private parent: DocumentMergeConflictTracker, private origin: string) {\n\t}\n\n\tgetConflicts(document: vscode.TextDocument): PromiseLike<interfaces.IDocumentMergeConflict[]> {\n\t\treturn this.parent.getConflicts(document, this.origin);\n\t}\n\n\tisPending(document: vscode.TextDocument): boolean {\n\t\treturn this.parent.isPending(document, this.origin);\n\t}\n\n\tforget(document: vscode.TextDocument) {\n\t\tthis.parent.forget(document);\n\t}\n}\n\nexport default class DocumentMergeConflictTracker implements vscode.Disposable, interfaces.IDocumentMergeConflictTrackerService {\n\tprivate cache: Map<string, ScanTask> = new Map();\n\tprivate delayExpireTime: number = 0;\n\n\tgetConflicts(document: vscode.TextDocument, origin: string): PromiseLike<interfaces.IDocumentMergeConflict[]> {\n\t\t// Attempt from cache\n\n\t\tlet key = this.getCacheKey(document);\n\n\t\tif (!key) {\n\t\t\t// Document doesn't have a uri, can't cache it, so return\n\t\t\treturn Promise.resolve(this.getConflictsOrEmpty(document, [origin]));\n\t\t}\n\n\t\tlet cacheItem = this.cache.get(key);\n\t\tif (!cacheItem) {\n\t\t\tcacheItem = new ScanTask(this.delayExpireTime, origin);\n\t\t\tthis.cache.set(key, cacheItem);\n\t\t}\n\t\telse {\n\t\t\tcacheItem.addOrigin(origin);\n\t\t}\n\n\t\treturn cacheItem.delayTask.trigger(() => {\n\t\t\tlet conflicts = this.getConflictsOrEmpty(document, Array.from(cacheItem!.origins));\n\n\t\t\tif (this.cache) {\n\t\t\t\tthis.cache.delete(key!);\n\t\t\t}\n\n\t\t\treturn conflicts;\n\t\t});\n\t}\n\n\tisPending(document: vscode.TextDocument, origin: string): boolean {\n\t\tif (!document) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet key = this.getCacheKey(document);\n\t\tif (!key) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst task = this.cache.get(key);\n\t\tif (!task) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn task.hasOrigin(origin);\n\t}\n\n\tcreateTracker(origin: string): interfaces.IDocumentMergeConflictTracker {\n\t\treturn new OriginDocumentMergeConflictTracker(this, origin);\n\t}\n\n\tforget(document: vscode.TextDocument) {\n\t\tlet key = this.getCacheKey(document);\n\n\t\tif (key) {\n\t\t\tthis.cache.delete(key);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.cache.clear();\n\t}\n\n\tprivate getConflictsOrEmpty(document: vscode.TextDocument, _origins: string[]): interfaces.IDocumentMergeConflict[] {\n\t\tconst containsConflict = MergeConflictParser.containsConflict(document);\n\n\t\tif (!containsConflict) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst conflicts = MergeConflictParser.scanDocument(document);\n\t\treturn conflicts;\n\t}\n\n\tprivate getCacheKey(document: vscode.TextDocument): string | null {\n\t\tif (document.uri) {\n\t\t\treturn document.uri.toString();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\nimport { DocumentMergeConflict } from './documentMergeConflict';\n\nconst startHeaderMarker = '<<<<<<<';\nconst commonAncestorsMarker = '|||||||';\nconst splitterMarker = '=======';\nconst endFooterMarker = '>>>>>>>';\n\ninterface IScanMergedConflict {\n\tstartHeader: vscode.TextLine;\n\tcommonAncestors: vscode.TextLine[];\n\tsplitter?: vscode.TextLine;\n\tendFooter?: vscode.TextLine;\n}\n\nexport class MergeConflictParser {\n\n\tstatic scanDocument(document: vscode.TextDocument): interfaces.IDocumentMergeConflict[] {\n\n\t\t// Scan each line in the document, we already know there is at least a <<<<<<< and\n\t\t// >>>>>> marker within the document, we need to group these into conflict ranges.\n\t\t// We initially build a scan match, that references the lines of the header, splitter\n\t\t// and footer. This is then converted into a full descriptor containing all required\n\t\t// ranges.\n\n\t\tlet currentConflict: IScanMergedConflict | null = null;\n\t\tconst conflictDescriptors: interfaces.IDocumentMergeConflictDescriptor[] = [];\n\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i);\n\n\t\t\t// Ignore empty lines\n\t\t\tif (!line || line.isEmptyOrWhitespace) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Is this a start line? <<<<<<<\n\t\t\tif (line.text.startsWith(startHeaderMarker)) {\n\t\t\t\tif (currentConflict !== null) {\n\t\t\t\t\t// Error, we should not see a startMarker before we've seen an endMarker\n\t\t\t\t\tcurrentConflict = null;\n\n\t\t\t\t\t// Give up parsing, anything matched up this to this point will be decorated\n\t\t\t\t\t// anything after will not\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Create a new conflict starting at this line\n\t\t\t\tcurrentConflict = { startHeader: line, commonAncestors: [] };\n\t\t\t}\n\t\t\t// Are we within a conflict block and is this a common ancestors marker? |||||||\n\t\t\telse if (currentConflict && !currentConflict.splitter && line.text.startsWith(commonAncestorsMarker)) {\n\t\t\t\tcurrentConflict.commonAncestors.push(line);\n\t\t\t}\n\t\t\t// Are we within a conflict block and is this a splitter? =======\n\t\t\telse if (currentConflict && !currentConflict.splitter && line.text === splitterMarker) {\n\t\t\t\tcurrentConflict.splitter = line;\n\t\t\t}\n\t\t\t// Are we within a conflict block and is this a footer? >>>>>>>\n\t\t\telse if (currentConflict && line.text.startsWith(endFooterMarker)) {\n\t\t\t\tcurrentConflict.endFooter = line;\n\n\t\t\t\t// Create a full descriptor from the lines that we matched. This can return\n\t\t\t\t// null if the descriptor could not be completed.\n\t\t\t\tlet completeDescriptor = MergeConflictParser.scanItemTolMergeConflictDescriptor(document, currentConflict);\n\n\t\t\t\tif (completeDescriptor !== null) {\n\t\t\t\t\tconflictDescriptors.push(completeDescriptor);\n\t\t\t\t}\n\n\t\t\t\t// Reset the current conflict to be empty, so we can match the next\n\t\t\t\t// starting header marker.\n\t\t\t\tcurrentConflict = null;\n\t\t\t}\n\t\t}\n\n\t\treturn conflictDescriptors\n\t\t\t.filter(Boolean)\n\t\t\t.map(descriptor => new DocumentMergeConflict(descriptor));\n\t}\n\n\tprivate static scanItemTolMergeConflictDescriptor(document: vscode.TextDocument, scanned: IScanMergedConflict): interfaces.IDocumentMergeConflictDescriptor | null {\n\t\t// Validate we have all the required lines within the scan item.\n\t\tif (!scanned.startHeader || !scanned.splitter || !scanned.endFooter) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet tokenAfterCurrentBlock: vscode.TextLine = scanned.commonAncestors[0] || scanned.splitter;\n\n\t\t// Assume that descriptor.current.header, descriptor.incoming.header and descriptor.splitter\n\t\t// have valid ranges, fill in content and total ranges from these parts.\n\t\t// NOTE: We need to shift the decorator range back one character so the splitter does not end up with\n\t\t// two decoration colors (current and splitter), if we take the new line from the content into account\n\t\t// the decorator will wrap to the next line.\n\t\treturn {\n\t\t\tcurrent: {\n\t\t\t\theader: scanned.startHeader.range,\n\t\t\t\tdecoratorContent: new vscode.Range(\n\t\t\t\t\tscanned.startHeader.rangeIncludingLineBreak.end,\n\t\t\t\t\tMergeConflictParser.shiftBackOneCharacter(document, tokenAfterCurrentBlock.range.start, scanned.startHeader.rangeIncludingLineBreak.end)),\n\t\t\t\t// Current content is range between header (shifted for linebreak) and splitter or common ancestors mark start\n\t\t\t\tcontent: new vscode.Range(\n\t\t\t\t\tscanned.startHeader.rangeIncludingLineBreak.end,\n\t\t\t\t\ttokenAfterCurrentBlock.range.start),\n\t\t\t\tname: scanned.startHeader.text.substring(startHeaderMarker.length + 1)\n\t\t\t},\n\t\t\tcommonAncestors: scanned.commonAncestors.map((currentTokenLine, index, commonAncestors) => {\n\t\t\t\tlet nextTokenLine = commonAncestors[index + 1] || scanned.splitter;\n\t\t\t\treturn {\n\t\t\t\t\theader: currentTokenLine.range,\n\t\t\t\t\tdecoratorContent: new vscode.Range(\n\t\t\t\t\t\tcurrentTokenLine.rangeIncludingLineBreak.end,\n\t\t\t\t\t\tMergeConflictParser.shiftBackOneCharacter(document, nextTokenLine.range.start, currentTokenLine.rangeIncludingLineBreak.end)),\n\t\t\t\t\t// Each common ancestors block is range between one common ancestors token\n\t\t\t\t\t// (shifted for linebreak) and start of next common ancestors token or splitter\n\t\t\t\t\tcontent: new vscode.Range(\n\t\t\t\t\t\tcurrentTokenLine.rangeIncludingLineBreak.end,\n\t\t\t\t\t\tnextTokenLine.range.start),\n\t\t\t\t\tname: currentTokenLine.text.substring(commonAncestorsMarker.length + 1)\n\t\t\t\t};\n\t\t\t}),\n\t\t\tsplitter: scanned.splitter.range,\n\t\t\tincoming: {\n\t\t\t\theader: scanned.endFooter.range,\n\t\t\t\tdecoratorContent: new vscode.Range(\n\t\t\t\t\tscanned.splitter.rangeIncludingLineBreak.end,\n\t\t\t\t\tMergeConflictParser.shiftBackOneCharacter(document, scanned.endFooter.range.start, scanned.splitter.rangeIncludingLineBreak.end)),\n\t\t\t\t// Incoming content is range between splitter (shifted for linebreak) and footer start\n\t\t\t\tcontent: new vscode.Range(\n\t\t\t\t\tscanned.splitter.rangeIncludingLineBreak.end,\n\t\t\t\t\tscanned.endFooter.range.start),\n\t\t\t\tname: scanned.endFooter.text.substring(endFooterMarker.length + 1)\n\t\t\t},\n\t\t\t// Entire range is between current header start and incoming header end (including line break)\n\t\t\trange: new vscode.Range(scanned.startHeader.range.start, scanned.endFooter.rangeIncludingLineBreak.end)\n\t\t};\n\t}\n\n\tstatic containsConflict(document: vscode.TextDocument): boolean {\n\t\tif (!document) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet text = document.getText();\n\t\treturn text.includes(startHeaderMarker) && text.includes(endFooterMarker);\n\t}\n\n\tprivate static shiftBackOneCharacter(document: vscode.TextDocument, range: vscode.Position, unlessEqual: vscode.Position): vscode.Position {\n\t\tif (range.isEqual(unlessEqual)) {\n\t\t\treturn range;\n\t\t}\n\n\t\tlet line = range.line;\n\t\tlet character = range.character - 1;\n\n\t\tif (character < 0) {\n\t\t\tline--;\n\t\t\tcharacter = document.lineAt(line).range.end.character;\n\t\t}\n\n\t\treturn new vscode.Position(line, character);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as interfaces from './interfaces';\nimport * as vscode from 'vscode';\n\nexport class DocumentMergeConflict implements interfaces.IDocumentMergeConflict {\n\n\tpublic range: vscode.Range;\n\tpublic current: interfaces.IMergeRegion;\n\tpublic incoming: interfaces.IMergeRegion;\n\tpublic commonAncestors: interfaces.IMergeRegion[];\n\tpublic splitter: vscode.Range;\n\n\tconstructor(descriptor: interfaces.IDocumentMergeConflictDescriptor) {\n\t\tthis.range = descriptor.range;\n\t\tthis.current = descriptor.current;\n\t\tthis.incoming = descriptor.incoming;\n\t\tthis.commonAncestors = descriptor.commonAncestors;\n\t\tthis.splitter = descriptor.splitter;\n\t}\n\n\tpublic commitEdit(type: interfaces.CommitType, editor: vscode.TextEditor, edit?: vscode.TextEditorEdit): Thenable<boolean> {\n\n\t\tif (edit) {\n\n\t\t\tthis.applyEdit(type, editor.document, edit);\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\treturn editor.edit((edit) => this.applyEdit(type, editor.document, edit));\n\t}\n\n\tpublic applyEdit(type: interfaces.CommitType, document: vscode.TextDocument, edit: { replace(range: vscode.Range, newText: string): void; }): void {\n\n\t\t// Each conflict is a set of ranges as follows, note placements or newlines\n\t\t// which may not in spans\n\t\t// [ Conflict Range             -- (Entire content below)\n\t\t//   [ Current Header ]\\n       -- >>>>> Header\n\t\t//   [ Current Content ]        -- (content)\n\t\t//   [ Splitter ]\\n             -- =====\n\t\t//   [ Incoming Content ]       -- (content)\n\t\t//   [ Incoming Header ]\\n      -- <<<<< Incoming\n\t\t// ]\n\t\tif (type === interfaces.CommitType.Current) {\n\t\t\t// Replace [ Conflict Range ] with [ Current Content ]\n\t\t\tlet content = document.getText(this.current.content);\n\t\t\tthis.replaceRangeWithContent(content, edit);\n\t\t}\n\t\telse if (type === interfaces.CommitType.Incoming) {\n\t\t\tlet content = document.getText(this.incoming.content);\n\t\t\tthis.replaceRangeWithContent(content, edit);\n\t\t}\n\t\telse if (type === interfaces.CommitType.Both) {\n\t\t\t// Replace [ Conflict Range ] with [ Current Content ] + \\n + [ Incoming Content ]\n\n\t\t\tconst currentContent = document.getText(this.current.content);\n\t\t\tconst incomingContent = document.getText(this.incoming.content);\n\n\t\t\tedit.replace(this.range, currentContent.concat(incomingContent));\n\t\t}\n\t}\n\n\tprivate replaceRangeWithContent(content: string, edit: { replace(range: vscode.Range, newText: string): void; }) {\n\t\tif (this.isNewlineOnly(content)) {\n\t\t\tedit.replace(this.range, '');\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace [ Conflict Range ] with [ Current Content ]\n\t\tedit.replace(this.range, content);\n\t}\n\n\tprivate isNewlineOnly(text: string) {\n\t\treturn text === '\\n' || text === '\\r\\n';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITask<T> {\n\t(): T;\n}\n\nexport class Delayer<T> {\n\n\tpublic defaultDelay: number;\n\tprivate timeout: any; // Timer\n\tprivate completionPromise: Promise<T> | null;\n\tprivate onSuccess: ((value: T | PromiseLike<T> | undefined) => void) | null;\n\tprivate task: ITask<T> | null;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.defaultDelay = defaultDelay;\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.onSuccess = null;\n\t\tthis.task = null;\n\t}\n\n\tpublic trigger(task: ITask<T>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tif (delay >= 0) {\n\t\t\tthis.cancelTimeout();\n\t\t}\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise<T | undefined>((resolve) => {\n\t\t\t\tthis.onSuccess = resolve;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.onSuccess = null;\n\t\t\t\tlet result = this.task!();\n\t\t\t\tthis.task = null;\n\t\t\t\treturn result;\n\t\t\t});\n\t\t}\n\n\t\tif (delay >= 0 || this.timeout === null) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tthis.timeout = null;\n\t\t\t\tthis.onSuccess!(undefined);\n\t\t\t}, delay >= 0 ? delay : this.defaultDelay);\n\t\t}\n\n\t\treturn this.completionPromise;\n\t}\n\n\tpublic forceDelivery(): Promise<T> | null {\n\t\tif (!this.completionPromise) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.cancelTimeout();\n\t\tlet result = this.completionPromise;\n\t\tthis.onSuccess!(undefined);\n\t\treturn result;\n\t}\n\n\tpublic isTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.cancelTimeout();\n\t\tthis.completionPromise = null;\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\nimport { loadMessageBundle } from 'vscode-nls';\nconst localize = loadMessageBundle();\n\nexport default class MergeConflictCodeLensProvider implements vscode.CodeLensProvider, vscode.Disposable {\n\tprivate codeLensRegistrationHandle?: vscode.Disposable | null;\n\tprivate config?: interfaces.IExtensionConfiguration;\n\tprivate tracker: interfaces.IDocumentMergeConflictTracker;\n\n\tconstructor(trackerService: interfaces.IDocumentMergeConflictTrackerService) {\n\t\tthis.tracker = trackerService.createTracker('codelens');\n\t}\n\n\tbegin(config: interfaces.IExtensionConfiguration) {\n\t\tthis.config = config;\n\n\t\tif (this.config.enableCodeLens) {\n\t\t\tthis.registerCodeLensProvider();\n\t\t}\n\t}\n\n\tconfigurationUpdated(updatedConfig: interfaces.IExtensionConfiguration) {\n\n\t\tif (updatedConfig.enableCodeLens === false && this.codeLensRegistrationHandle) {\n\t\t\tthis.codeLensRegistrationHandle.dispose();\n\t\t\tthis.codeLensRegistrationHandle = null;\n\t\t}\n\t\telse if (updatedConfig.enableCodeLens === true && !this.codeLensRegistrationHandle) {\n\t\t\tthis.registerCodeLensProvider();\n\t\t}\n\n\t\tthis.config = updatedConfig;\n\t}\n\n\n\tdispose() {\n\t\tif (this.codeLensRegistrationHandle) {\n\t\t\tthis.codeLensRegistrationHandle.dispose();\n\t\t\tthis.codeLensRegistrationHandle = null;\n\t\t}\n\t}\n\n\tasync provideCodeLenses(document: vscode.TextDocument, _token: vscode.CancellationToken): Promise<vscode.CodeLens[] | null> {\n\n\t\tif (!this.config || !this.config.enableCodeLens) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet conflicts = await this.tracker.getConflicts(document);\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet items: vscode.CodeLens[] = [];\n\n\t\tconflicts.forEach(conflict => {\n\t\t\tlet acceptCurrentCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.accept.current',\n\t\t\t\ttitle: localize('acceptCurrentChange', 'Accept Current Change'),\n\t\t\t\targuments: ['known-conflict', conflict]\n\t\t\t};\n\n\t\t\tlet acceptIncomingCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.accept.incoming',\n\t\t\t\ttitle: localize('acceptIncomingChange', 'Accept Incoming Change'),\n\t\t\t\targuments: ['known-conflict', conflict]\n\t\t\t};\n\n\t\t\tlet acceptBothCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.accept.both',\n\t\t\t\ttitle: localize('acceptBothChanges', 'Accept Both Changes'),\n\t\t\t\targuments: ['known-conflict', conflict]\n\t\t\t};\n\n\t\t\tlet diffCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.compare',\n\t\t\t\ttitle: localize('compareChanges', 'Compare Changes'),\n\t\t\t\targuments: [conflict]\n\t\t\t};\n\n\t\t\titems.push(\n\t\t\t\tnew vscode.CodeLens(conflict.range, acceptCurrentCommand),\n\t\t\t\tnew vscode.CodeLens(conflict.range.with(conflict.range.start.with({ character: conflict.range.start.character + 1 })), acceptIncomingCommand),\n\t\t\t\tnew vscode.CodeLens(conflict.range.with(conflict.range.start.with({ character: conflict.range.start.character + 2 })), acceptBothCommand),\n\t\t\t\tnew vscode.CodeLens(conflict.range.with(conflict.range.start.with({ character: conflict.range.start.character + 3 })), diffCommand)\n\t\t\t);\n\t\t});\n\n\t\treturn items;\n\t}\n\n\tprivate registerCodeLensProvider() {\n\t\tthis.codeLensRegistrationHandle = vscode.languages.registerCodeLensProvider([\n\t\t\t{ scheme: 'file' },\n\t\t\t{ scheme: 'untitled' },\n\t\t\t{ scheme: 'vscode-userdata' },\n\t\t], this);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nfunction format(message, args) {\n\tlet result;\n\t// if (isPseudo) {\n\t// \t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t// \tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t// }\n\tif (args.length === 0) {\n\t\tresult = message;\n\t}\n\telse {\n\t\tresult = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n\t\t\tlet index = rest[0];\n\t\t\tlet arg = args[index];\n\t\t\tlet replacement = match;\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\treplacement = arg;\n\t\t\t}\n\t\t\telse if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n\t\t\t\treplacement = String(arg);\n\t\t\t}\n\t\t\treturn replacement;\n\t\t});\n\t}\n\treturn result;\n}\n\nfunction localize(key, message) {\n\tlet args = [];\n\tfor (let _i = 2; _i < arguments.length; _i++) {\n\t\targs[_i - 2] = arguments[_i];\n\t}\n\treturn format(message, args);\n}\n\nfunction loadMessageBundle(file) {\n\treturn localize;\n}\n\nlet MessageFormat;\n(function (MessageFormat) {\n\tMessageFormat[\"file\"] = \"file\";\n\tMessageFormat[\"bundle\"] = \"bundle\";\n\tMessageFormat[\"both\"] = \"both\";\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\nlet BundleFormat;\n(function (BundleFormat) {\n\t// the nls.bundle format\n\tBundleFormat[\"standalone\"] = \"standalone\";\n\tBundleFormat[\"languagePack\"] = \"languagePack\";\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\n\nexports.loadMessageBundle = loadMessageBundle;\nfunction config(opts) {\n\tif (opts) {\n\t\tif (isString(opts.locale)) {\n\t\t\toptions.locale = opts.locale.toLowerCase();\n\t\t\toptions.language = options.locale;\n\t\t\tresolvedLanguage = undefined;\n\t\t\tresolvedBundles = Object.create(null);\n\t\t}\n\t\tif (opts.messageFormat !== undefined) {\n\t\t\toptions.messageFormat = opts.messageFormat;\n\t\t}\n\t\tif (opts.bundleFormat === BundleFormat.standalone && options.languagePackSupport === true) {\n\t\t\toptions.languagePackSupport = false;\n\t\t}\n\t}\n\tisPseudo = options.locale === 'pseudo';\n\treturn loadMessageBundle;\n}\nexports.config = config;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\nimport ContentProvider from './contentProvider';\nimport { loadMessageBundle } from 'vscode-nls';\nconst localize = loadMessageBundle();\n\ninterface IDocumentMergeConflictNavigationResults {\n\tcanNavigate: boolean;\n\tconflict?: interfaces.IDocumentMergeConflict;\n}\n\nenum NavigationDirection {\n\tForwards,\n\tBackwards\n}\n\nexport default class CommandHandler implements vscode.Disposable {\n\n\tprivate disposables: vscode.Disposable[] = [];\n\tprivate tracker: interfaces.IDocumentMergeConflictTracker;\n\n\tconstructor(trackerService: interfaces.IDocumentMergeConflictTrackerService) {\n\t\tthis.tracker = trackerService.createTracker('commands');\n\t}\n\n\tbegin() {\n\t\tthis.disposables.push(\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.current', this.acceptCurrent),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.incoming', this.acceptIncoming),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.selection', this.acceptSelection),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.both', this.acceptBoth),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.all-current', this.acceptAllCurrent, this.acceptAllCurrentResources),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.all-incoming', this.acceptAllIncoming, this.acceptAllIncomingResources),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.all-both', this.acceptAllBoth),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.next', this.navigateNext),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.previous', this.navigatePrevious),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.compare', this.compare)\n\t\t);\n\t}\n\n\tprivate registerTextEditorCommand(command: string, cb: (editor: vscode.TextEditor, ...args: any[]) => Promise<void>, resourceCB?: (uris: vscode.Uri[]) => Promise<void>) {\n\t\treturn vscode.commands.registerCommand(command, (...args) => {\n\t\t\tif (resourceCB && args.length && args.every(arg => arg && arg.resourceUri)) {\n\t\t\t\treturn resourceCB.call(this, args.map(arg => arg.resourceUri));\n\t\t\t}\n\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\treturn editor && cb.call(this, editor, ...args);\n\t\t});\n\t}\n\n\tacceptCurrent(editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\t\treturn this.accept(interfaces.CommitType.Current, editor, ...args);\n\t}\n\n\tacceptIncoming(editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\t\treturn this.accept(interfaces.CommitType.Incoming, editor, ...args);\n\t}\n\n\tacceptBoth(editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\t\treturn this.accept(interfaces.CommitType.Both, editor, ...args);\n\t}\n\n\tacceptAllCurrent(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.acceptAll(interfaces.CommitType.Current, editor);\n\t}\n\n\tacceptAllIncoming(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.acceptAll(interfaces.CommitType.Incoming, editor);\n\t}\n\n\tacceptAllCurrentResources(resources: vscode.Uri[]): Promise<void> {\n\t\treturn this.acceptAllResources(interfaces.CommitType.Current, resources);\n\t}\n\n\tacceptAllIncomingResources(resources: vscode.Uri[]): Promise<void> {\n\t\treturn this.acceptAllResources(interfaces.CommitType.Incoming, resources);\n\t}\n\n\tacceptAllBoth(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.acceptAll(interfaces.CommitType.Both, editor);\n\t}\n\n\tasync compare(editor: vscode.TextEditor, conflict: interfaces.IDocumentMergeConflict | null) {\n\n\t\t// No conflict, command executed from command palette\n\t\tif (!conflict) {\n\t\t\tconflict = await this.findConflictContainingSelection(editor);\n\n\t\t\t// Still failed to find conflict, warn the user and exit\n\t\t\tif (!conflict) {\n\t\t\t\tvscode.window.showWarningMessage(localize('cursorNotInConflict', 'Editor cursor is not within a merge conflict'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst conflicts = await this.tracker.getConflicts(editor.document);\n\n\t\t// Still failed to find conflict, warn the user and exit\n\t\tif (!conflicts) {\n\t\t\tvscode.window.showWarningMessage(localize('cursorNotInConflict', 'Editor cursor is not within a merge conflict'));\n\t\t\treturn;\n\t\t}\n\n\t\tconst scheme = editor.document.uri.scheme;\n\t\tlet range = conflict.current.content;\n\t\tlet leftRanges = conflicts.map(conflict => [conflict.current.content, conflict.range]);\n\t\tlet rightRanges = conflicts.map(conflict => [conflict.incoming.content, conflict.range]);\n\n\t\tconst leftUri = editor.document.uri.with({\n\t\t\tscheme: ContentProvider.scheme,\n\t\t\tquery: JSON.stringify({ scheme, range: range, ranges: leftRanges })\n\t\t});\n\n\n\t\trange = conflict.incoming.content;\n\t\tconst rightUri = leftUri.with({ query: JSON.stringify({ scheme, ranges: rightRanges }) });\n\n\t\tlet mergeConflictLineOffsets = 0;\n\t\tfor (let nextconflict of conflicts) {\n\t\t\tif (nextconflict.range.isEqual(conflict.range)) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tmergeConflictLineOffsets += (nextconflict.range.end.line - nextconflict.range.start.line) - (nextconflict.incoming.content.end.line - nextconflict.incoming.content.start.line);\n\t\t\t}\n\t\t}\n\t\tconst selection = new vscode.Range(\n\t\t\tconflict.range.start.line - mergeConflictLineOffsets, conflict.range.start.character,\n\t\t\tconflict.range.start.line - mergeConflictLineOffsets, conflict.range.start.character\n\t\t);\n\n\t\tconst docPath = editor.document.uri.path;\n\t\tconst fileName = docPath.substring(docPath.lastIndexOf('/') + 1); // avoid NodeJS path to keep browser webpack small\n\t\tconst title = localize('compareChangesTitle', '{0}: Current Changes ⟷ Incoming Changes', fileName);\n\t\tconst mergeConflictConfig = vscode.workspace.getConfiguration('merge-conflict');\n\t\tconst openToTheSide = mergeConflictConfig.get<string>('diffViewPosition');\n\t\tconst opts: vscode.TextDocumentShowOptions = {\n\t\t\tviewColumn: openToTheSide === 'Beside' ? vscode.ViewColumn.Beside : vscode.ViewColumn.Active,\n\t\t\tselection\n\t\t};\n\n\t\tif (openToTheSide === 'Below') {\n\t\t\tawait vscode.commands.executeCommand('workbench.action.newGroupBelow');\n\t\t}\n\n\t\tawait vscode.commands.executeCommand('vscode.diff', leftUri, rightUri, title, opts);\n\t}\n\n\tnavigateNext(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.navigate(editor, NavigationDirection.Forwards);\n\t}\n\n\tnavigatePrevious(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.navigate(editor, NavigationDirection.Backwards);\n\t}\n\n\tasync acceptSelection(editor: vscode.TextEditor): Promise<void> {\n\t\tlet conflict = await this.findConflictContainingSelection(editor);\n\n\t\tif (!conflict) {\n\t\t\tvscode.window.showWarningMessage(localize('cursorNotInConflict', 'Editor cursor is not within a merge conflict'));\n\t\t\treturn;\n\t\t}\n\n\t\tlet typeToAccept: interfaces.CommitType;\n\t\tlet tokenAfterCurrentBlock: vscode.Range = conflict.splitter;\n\n\t\tif (conflict.commonAncestors.length > 0) {\n\t\t\ttokenAfterCurrentBlock = conflict.commonAncestors[0].header;\n\t\t}\n\n\t\t// Figure out if the cursor is in current or incoming, we do this by seeing if\n\t\t// the active position is before or after the range of the splitter or common\n\t\t// ancestors marker. We can use this trick as the previous check in\n\t\t// findConflictByActiveSelection will ensure it's within the conflict range, so\n\t\t// we don't falsely identify \"current\" or \"incoming\" if outside of a conflict range.\n\t\tif (editor.selection.active.isBefore(tokenAfterCurrentBlock.start)) {\n\t\t\ttypeToAccept = interfaces.CommitType.Current;\n\t\t}\n\t\telse if (editor.selection.active.isAfter(conflict.splitter.end)) {\n\t\t\ttypeToAccept = interfaces.CommitType.Incoming;\n\t\t}\n\t\telse if (editor.selection.active.isBefore(conflict.splitter.start)) {\n\t\t\tvscode.window.showWarningMessage(localize('cursorOnCommonAncestorsRange', 'Editor cursor is within the common ancestors block, please move it to either the \"current\" or \"incoming\" block'));\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tvscode.window.showWarningMessage(localize('cursorOnSplitterRange', 'Editor cursor is within the merge conflict splitter, please move it to either the \"current\" or \"incoming\" block'));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tracker.forget(editor.document);\n\t\tconflict.commitEdit(typeToAccept, editor);\n\t}\n\n\tdispose() {\n\t\tthis.disposables.forEach(disposable => disposable.dispose());\n\t\tthis.disposables = [];\n\t}\n\n\tprivate async navigate(editor: vscode.TextEditor, direction: NavigationDirection): Promise<void> {\n\t\tlet navigationResult = await this.findConflictForNavigation(editor, direction);\n\n\t\tif (!navigationResult) {\n\t\t\t// Check for autoNavigateNextConflict, if it's enabled(which indicating no conflict remain), then do not show warning\n\t\t\tconst mergeConflictConfig = vscode.workspace.getConfiguration('merge-conflict');\n\t\t\tif (mergeConflictConfig.get<boolean>('autoNavigateNextConflict.enabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvscode.window.showWarningMessage(localize('noConflicts', 'No merge conflicts found in this file'));\n\t\t\treturn;\n\t\t}\n\t\telse if (!navigationResult.canNavigate) {\n\t\t\tvscode.window.showWarningMessage(localize('noOtherConflictsInThisFile', 'No other merge conflicts within this file'));\n\t\t\treturn;\n\t\t}\n\t\telse if (!navigationResult.conflict) {\n\t\t\t// TODO: Show error message?\n\t\t\treturn;\n\t\t}\n\n\t\t// Move the selection to the first line of the conflict\n\t\teditor.selection = new vscode.Selection(navigationResult.conflict.range.start, navigationResult.conflict.range.start);\n\t\teditor.revealRange(navigationResult.conflict.range, vscode.TextEditorRevealType.Default);\n\t}\n\n\tprivate async accept(type: interfaces.CommitType, editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\n\t\tlet conflict: interfaces.IDocumentMergeConflict | null;\n\n\t\t// If launched with known context, take the conflict from that\n\t\tif (args[0] === 'known-conflict') {\n\t\t\tconflict = args[1];\n\t\t}\n\t\telse {\n\t\t\t// Attempt to find a conflict that matches the current cursor position\n\t\t\tconflict = await this.findConflictContainingSelection(editor);\n\t\t}\n\n\t\tif (!conflict) {\n\t\t\tvscode.window.showWarningMessage(localize('cursorNotInConflict', 'Editor cursor is not within a merge conflict'));\n\t\t\treturn;\n\t\t}\n\n\t\t// Tracker can forget as we know we are going to do an edit\n\t\tthis.tracker.forget(editor.document);\n\t\tconflict.commitEdit(type, editor);\n\n\t\t// navigate to the next merge conflict\n\t\tconst mergeConflictConfig = vscode.workspace.getConfiguration('merge-conflict');\n\t\tif (mergeConflictConfig.get<boolean>('autoNavigateNextConflict.enabled')) {\n\t\t\tthis.navigateNext(editor);\n\t\t}\n\n\t}\n\n\tprivate async acceptAll(type: interfaces.CommitType, editor: vscode.TextEditor): Promise<void> {\n\t\tlet conflicts = await this.tracker.getConflicts(editor.document);\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\tvscode.window.showWarningMessage(localize('noConflicts', 'No merge conflicts found in this file'));\n\t\t\treturn;\n\t\t}\n\n\t\t// For get the current state of the document, as we know we are doing to do a large edit\n\t\tthis.tracker.forget(editor.document);\n\n\t\t// Apply all changes as one edit\n\t\tawait editor.edit((edit) => conflicts.forEach(conflict => {\n\t\t\tconflict.applyEdit(type, editor.document, edit);\n\t\t}));\n\t}\n\n\tprivate async acceptAllResources(type: interfaces.CommitType, resources: vscode.Uri[]): Promise<void> {\n\t\tconst documents = await Promise.all(resources.map(resource => vscode.workspace.openTextDocument(resource)));\n\t\tconst edit = new vscode.WorkspaceEdit();\n\t\tfor (const document of documents) {\n\t\t\tconst conflicts = await this.tracker.getConflicts(document);\n\n\t\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// For get the current state of the document, as we know we are doing to do a large edit\n\t\t\tthis.tracker.forget(document);\n\n\t\t\t// Apply all changes as one edit\n\t\t\tconflicts.forEach(conflict => {\n\t\t\t\tconflict.applyEdit(type, document, { replace: (range, newText) => edit.replace(document.uri, range, newText) });\n\t\t\t});\n\t\t}\n\t\tvscode.workspace.applyEdit(edit);\n\t}\n\n\tprivate async findConflictContainingSelection(editor: vscode.TextEditor, conflicts?: interfaces.IDocumentMergeConflict[]): Promise<interfaces.IDocumentMergeConflict | null> {\n\n\t\tif (!conflicts) {\n\t\t\tconflicts = await this.tracker.getConflicts(editor.document);\n\t\t}\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (const conflict of conflicts) {\n\t\t\tif (conflict.range.contains(editor.selection.active)) {\n\t\t\t\treturn conflict;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate async findConflictForNavigation(editor: vscode.TextEditor, direction: NavigationDirection, conflicts?: interfaces.IDocumentMergeConflict[]): Promise<IDocumentMergeConflictNavigationResults | null> {\n\t\tif (!conflicts) {\n\t\t\tconflicts = await this.tracker.getConflicts(editor.document);\n\t\t}\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet selection = editor.selection.active;\n\t\tif (conflicts.length === 1) {\n\t\t\tif (conflicts[0].range.contains(selection)) {\n\t\t\t\treturn {\n\t\t\t\t\tcanNavigate: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcanNavigate: true,\n\t\t\t\tconflict: conflicts[0]\n\t\t\t};\n\t\t}\n\n\t\tlet predicate: (_conflict: any) => boolean;\n\t\tlet fallback: () => interfaces.IDocumentMergeConflict;\n\n\t\tif (direction === NavigationDirection.Forwards) {\n\t\t\tpredicate = (conflict) => selection.isBefore(conflict.range.start);\n\t\t\tfallback = () => conflicts![0];\n\t\t} else if (direction === NavigationDirection.Backwards) {\n\t\t\tpredicate = (conflict) => selection.isAfter(conflict.range.start);\n\t\t\tfallback = () => conflicts![conflicts!.length - 1];\n\t\t} else {\n\t\t\tthrow new Error(`Unsupported direction ${direction}`);\n\t\t}\n\n\t\tfor (const conflict of conflicts) {\n\t\t\tif (predicate(conflict) && !conflict.range.contains(selection)) {\n\t\t\t\treturn {\n\t\t\t\t\tcanNavigate: true,\n\t\t\t\t\tconflict: conflict\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Went all the way to the end, return the head\n\t\treturn {\n\t\t\tcanNavigate: true,\n\t\t\tconflict: fallback()\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport default class MergeConflictContentProvider implements vscode.TextDocumentContentProvider, vscode.Disposable {\n\n\tstatic scheme = 'merge-conflict.conflict-diff';\n\n\tconstructor(private context: vscode.ExtensionContext) {\n\t}\n\n\tbegin() {\n\t\tthis.context.subscriptions.push(\n\t\t\tvscode.workspace.registerTextDocumentContentProvider(MergeConflictContentProvider.scheme, this)\n\t\t);\n\t}\n\n\tdispose() {\n\t}\n\n\tasync provideTextDocumentContent(uri: vscode.Uri): Promise<string | null> {\n\t\ttry {\n\t\t\tconst { scheme, ranges } = JSON.parse(uri.query) as { scheme: string, ranges: [{ line: number, character: number }[], { line: number, character: number }[]][] };\n\n\t\t\t// complete diff\n\t\t\tconst document = await vscode.workspace.openTextDocument(uri.with({ scheme, query: '' }));\n\n\t\t\tlet text = '';\n\t\t\tlet lastPosition = new vscode.Position(0, 0);\n\n\t\t\tranges.forEach(rangeObj => {\n\t\t\t\tlet [conflictRange, fullRange] = rangeObj;\n\t\t\t\tconst [start, end] = conflictRange;\n\t\t\t\tconst [fullStart, fullEnd] = fullRange;\n\n\t\t\t\ttext += document.getText(new vscode.Range(lastPosition.line, lastPosition.character, fullStart.line, fullStart.character));\n\t\t\t\ttext += document.getText(new vscode.Range(start.line, start.character, end.line, end.character));\n\t\t\t\tlastPosition = new vscode.Position(fullEnd.line, fullEnd.character);\n\t\t\t});\n\n\t\t\tlet documentEnd = document.lineAt(document.lineCount - 1).range.end;\n\t\t\ttext += document.getText(new vscode.Range(lastPosition.line, lastPosition.character, documentEnd.line, documentEnd.character));\n\n\t\t\treturn text;\n\t\t}\n\t\tcatch (ex) {\n\t\t\tawait vscode.window.showErrorMessage('Unable to show comparison');\n\t\t\treturn null;\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\nimport { loadMessageBundle } from 'vscode-nls';\nconst localize = loadMessageBundle();\n\nexport default class MergeDecorator implements vscode.Disposable {\n\n\tprivate decorations: { [key: string]: vscode.TextEditorDecorationType } = {};\n\n\tprivate decorationUsesWholeLine: boolean = true; // Useful for debugging, set to false to see exact match ranges\n\n\tprivate config?: interfaces.IExtensionConfiguration;\n\tprivate tracker: interfaces.IDocumentMergeConflictTracker;\n\tprivate updating = new Map<vscode.TextEditor, boolean>();\n\n\tconstructor(private context: vscode.ExtensionContext, trackerService: interfaces.IDocumentMergeConflictTrackerService) {\n\t\tthis.tracker = trackerService.createTracker('decorator');\n\t}\n\n\tbegin(config: interfaces.IExtensionConfiguration) {\n\t\tthis.config = config;\n\t\tthis.registerDecorationTypes(config);\n\n\t\t// Check if we already have a set of active windows, attempt to track these.\n\t\tvscode.window.visibleTextEditors.forEach(e => this.applyDecorations(e));\n\n\t\tvscode.workspace.onDidOpenTextDocument(event => {\n\t\t\tthis.applyDecorationsFromEvent(event);\n\t\t}, null, this.context.subscriptions);\n\n\t\tvscode.workspace.onDidChangeTextDocument(event => {\n\t\t\tthis.applyDecorationsFromEvent(event.document);\n\t\t}, null, this.context.subscriptions);\n\n\t\tvscode.window.onDidChangeVisibleTextEditors((e) => {\n\t\t\t// Any of which could be new (not just the active one).\n\t\t\te.forEach(e => this.applyDecorations(e));\n\t\t}, null, this.context.subscriptions);\n\t}\n\n\tconfigurationUpdated(config: interfaces.IExtensionConfiguration) {\n\t\tthis.config = config;\n\t\tthis.registerDecorationTypes(config);\n\n\t\t// Re-apply the decoration\n\t\tvscode.window.visibleTextEditors.forEach(e => {\n\t\t\tthis.removeDecorations(e);\n\t\t\tthis.applyDecorations(e);\n\t\t});\n\t}\n\n\tprivate registerDecorationTypes(config: interfaces.IExtensionConfiguration) {\n\n\t\t// Dispose of existing decorations\n\t\tObject.keys(this.decorations).forEach(k => this.decorations[k].dispose());\n\t\tthis.decorations = {};\n\n\t\t// None of our features are enabled\n\t\tif (!config.enableDecorations || !config.enableEditorOverview) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create decorators\n\t\tif (config.enableDecorations || config.enableEditorOverview) {\n\t\t\tthis.decorations['current.content'] = vscode.window.createTextEditorDecorationType(\n\t\t\t\tthis.generateBlockRenderOptions('merge.currentContentBackground', 'editorOverviewRuler.currentContentForeground', config)\n\t\t\t);\n\n\t\t\tthis.decorations['incoming.content'] = vscode.window.createTextEditorDecorationType(\n\t\t\t\tthis.generateBlockRenderOptions('merge.incomingContentBackground', 'editorOverviewRuler.incomingContentForeground', config)\n\t\t\t);\n\n\t\t\tthis.decorations['commonAncestors.content'] = vscode.window.createTextEditorDecorationType(\n\t\t\t\tthis.generateBlockRenderOptions('merge.commonContentBackground', 'editorOverviewRuler.commonContentForeground', config)\n\t\t\t);\n\t\t}\n\n\t\tif (config.enableDecorations) {\n\t\t\tthis.decorations['current.header'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t\tbackgroundColor: new vscode.ThemeColor('merge.currentHeaderBackground'),\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border'),\n\t\t\t\tafter: {\n\t\t\t\t\tcontentText: ' ' + localize('currentChange', '(Current Change)'),\n\t\t\t\t\tcolor: new vscode.ThemeColor('descriptionForeground')\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.decorations['commonAncestors.header'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t\tbackgroundColor: new vscode.ThemeColor('merge.commonHeaderBackground'),\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border')\n\t\t\t});\n\n\t\t\tthis.decorations['splitter'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border'),\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t});\n\n\t\t\tthis.decorations['incoming.header'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tbackgroundColor: new vscode.ThemeColor('merge.incomingHeaderBackground'),\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border'),\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t\tafter: {\n\t\t\t\t\tcontentText: ' ' + localize('incomingChange', '(Incoming Change)'),\n\t\t\t\t\tcolor: new vscode.ThemeColor('descriptionForeground')\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tdispose() {\n\n\t\t// TODO: Replace with Map<string, T>\n\t\tObject.keys(this.decorations).forEach(name => {\n\t\t\tthis.decorations[name].dispose();\n\t\t});\n\n\t\tthis.decorations = {};\n\t}\n\n\tprivate generateBlockRenderOptions(backgroundColor: string, overviewRulerColor: string, config: interfaces.IExtensionConfiguration): vscode.DecorationRenderOptions {\n\n\t\tlet renderOptions: vscode.DecorationRenderOptions = {};\n\n\t\tif (config.enableDecorations) {\n\t\t\trenderOptions.backgroundColor = new vscode.ThemeColor(backgroundColor);\n\t\t\trenderOptions.isWholeLine = this.decorationUsesWholeLine;\n\t\t}\n\n\t\tif (config.enableEditorOverview) {\n\t\t\trenderOptions.overviewRulerColor = new vscode.ThemeColor(overviewRulerColor);\n\t\t\trenderOptions.overviewRulerLane = vscode.OverviewRulerLane.Full;\n\t\t}\n\n\t\treturn renderOptions;\n\t}\n\n\tprivate applyDecorationsFromEvent(eventDocument: vscode.TextDocument) {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\tif (editor.document === eventDocument) {\n\t\t\t\t// Attempt to apply\n\t\t\t\tthis.applyDecorations(editor);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async applyDecorations(editor: vscode.TextEditor) {\n\t\tif (!editor || !editor.document) { return; }\n\n\t\tif (!this.config || (!this.config.enableDecorations && !this.config.enableEditorOverview)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we have a pending scan from the same origin, exit early. (Cannot use this.tracker.isPending() because decorations are per editor.)\n\t\tif (this.updating.get(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.updating.set(editor, true);\n\n\t\t\tlet conflicts = await this.tracker.getConflicts(editor.document);\n\t\t\tif (vscode.window.visibleTextEditors.indexOf(editor) === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (conflicts.length === 0) {\n\t\t\t\tthis.removeDecorations(editor);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Store decorations keyed by the type of decoration, set decoration wants a \"style\"\n\t\t\t// to go with it, which will match this key (see constructor);\n\t\t\tlet matchDecorations: { [key: string]: vscode.Range[] } = {};\n\n\t\t\tlet pushDecoration = (key: string, d: vscode.Range) => {\n\t\t\t\tmatchDecorations[key] = matchDecorations[key] || [];\n\t\t\t\tmatchDecorations[key].push(d);\n\t\t\t};\n\n\t\t\tconflicts.forEach(conflict => {\n\t\t\t\t// TODO, this could be more effective, just call getMatchPositions once with a map of decoration to position\n\t\t\t\tif (!conflict.current.decoratorContent.isEmpty) {\n\t\t\t\t\tpushDecoration('current.content', conflict.current.decoratorContent);\n\t\t\t\t}\n\t\t\t\tif (!conflict.incoming.decoratorContent.isEmpty) {\n\t\t\t\t\tpushDecoration('incoming.content', conflict.incoming.decoratorContent);\n\t\t\t\t}\n\n\t\t\t\tconflict.commonAncestors.forEach(commonAncestorsRegion => {\n\t\t\t\t\tif (!commonAncestorsRegion.decoratorContent.isEmpty) {\n\t\t\t\t\t\tpushDecoration('commonAncestors.content', commonAncestorsRegion.decoratorContent);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (this.config!.enableDecorations) {\n\t\t\t\t\tpushDecoration('current.header', conflict.current.header);\n\t\t\t\t\tpushDecoration('splitter', conflict.splitter);\n\t\t\t\t\tpushDecoration('incoming.header', conflict.incoming.header);\n\n\t\t\t\t\tconflict.commonAncestors.forEach(commonAncestorsRegion => {\n\t\t\t\t\t\tpushDecoration('commonAncestors.header', commonAncestorsRegion.header);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// For each match we've generated, apply the generated decoration with the matching decoration type to the\n\t\t\t// editor instance. Keys in both matches and decorations should match.\n\t\t\tObject.keys(matchDecorations).forEach(decorationKey => {\n\t\t\t\tlet decorationType = this.decorations[decorationKey];\n\n\t\t\t\tif (decorationType) {\n\t\t\t\t\teditor.setDecorations(decorationType, matchDecorations[decorationKey]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} finally {\n\t\t\tthis.updating.delete(editor);\n\t\t}\n\t}\n\n\tprivate removeDecorations(editor: vscode.TextEditor) {\n\t\t// Remove all decorations, there might be none\n\t\tObject.keys(this.decorations).forEach(decorationKey => {\n\n\t\t\t// Race condition, while editing the settings, it's possible to\n\t\t\t// generate regions before the configuration has been refreshed\n\t\t\tlet decorationType = this.decorations[decorationKey];\n\n\t\t\tif (decorationType) {\n\t\t\t\teditor.setDecorations(decorationType, []);\n\t\t\t}\n\t\t});\n\t}\n}\n"],"sourceRoot":""}