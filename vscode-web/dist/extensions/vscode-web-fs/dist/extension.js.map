{"version":3,"sources":["webpack://vscode-web-fs/webpack/universalModuleDefinition","webpack://vscode-web-fs/./node_modules/@isomorphic-git/idb-keyval/dist/idb-keyval.mjs","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/CacheFS.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/DefaultBackend.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/HttpBackend.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/IdbBackend.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/Mutex.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/Mutex2.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/PromisifiedFS.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/Stat.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/errors.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/index.js","webpack://vscode-web-fs/./node_modules/@isomorphic-git/lightning-fs/src/path.js","webpack://vscode-web-fs/./node_modules/fast-text-encoding/text.min.js","webpack://vscode-web-fs/./node_modules/isomorphic-textencoder/browser.js","webpack://vscode-web-fs/./node_modules/just-debounce-it/index.js","webpack://vscode-web-fs/./node_modules/just-once/index.js","webpack://vscode-web-fs/./node_modules/path-browserify/index.js","webpack://vscode-web-fs/./src/extension.ts","webpack://vscode-web-fs/./src/memFSProvider.ts","webpack://vscode-web-fs/./src/nativeFSProvider.ts","webpack://vscode-web-fs/external \"vscode\"","webpack://vscode-web-fs/webpack/bootstrap","webpack://vscode-web-fs/webpack/runtime/define property getters","webpack://vscode-web-fs/webpack/runtime/global","webpack://vscode-web-fs/webpack/runtime/hasOwnProperty shorthand","webpack://vscode-web-fs/webpack/runtime/make namespace object","webpack://vscode-web-fs/webpack/startup"],"names":["root","factory","exports","module","define","amd","a","i","self","Store","dbName","storeName","this","_dbName","_storeName","_init","_dbp","Promise","resolve","reject","openreq","indexedDB","open","onerror","error","onsuccess","result","onupgradeneeded","createObjectStore","type","callback","then","db","transaction","oncomplete","onabort","objectStore","close","undefined","store","getDefaultStore","get","key","req","_withIDBStore","set","value","put","update","updater","del","delete","clear","keys","openKeyCursor","openCursor","call","push","continue","_close","path","EEXIST","ENOENT","ENOTDIR","ENOTEMPTY","Map","mode","size","ino","mtimeMs","Date","now","superblock","_root","_makeRoot","parse","_countInodes","map","count","val","_maxInode","max","Math","str","printTree","indent","file","node","stat","toString","repeat","print","autoinc","mk","length","parseInt","lines","trim","split","stack","line","match","slice","filename","pop","filepath","follow","dir","partialPath","parts","part","target","_lookup","join","dirname","basename","has","entry","parent","filter","oldStat","err","oldFilepath","newFilepath","unlink","name","entries","_du","encode","decode","debounce","CacheFS","ETIMEDOUT","IdbBackend","HttpBackend","Mutex","Mutex2","saveSuperblock","_saveSuperblock","wipe","url","urlauto","fileDbName","fileStoreName","lockDbName","lockStoreName","_name","_idb","_mutex","navigator","locks","_cache","_opts","_needsWipe","_http","_urlauto","activated","release","force","wait","loadSuperblock","activate","text","deactivate","e","console","log","_lastSavedAt","opts","dirparts","shift","dirpart","mkdir","writeStat","encoding","Error","data","readFile","lstat","byteLength","_writeStat","writeFile","readdir","rmdir","rename","readlink","symlink","sizeFile","du","_url","fetch","res","ok","status","arrayBuffer","method","headers","idb","dbname","storename","_database","_storename","_store","inode","sleep","ms","r","setTimeout","_id","random","_lock","margin","holder","expires","renew","ttl","success","current","expired","doubleLock","interval","limit","acquire","doubleFree","someoneElseHasIt","_has","_release","request","ifAvailable","lock","timeout","controller","AbortController","abort","signal","steal","DefaultBackend","Stat","cleanParamsFilepathOpts","rest","normalize","cleanParamsFilepathDataOpts","cleanParamsFilepathFilepath","options","init","bind","_wrap","backFile","_deactivationPromise","_deactivationTimeout","_activationPromise","_operations","Set","args","_initPromiseResolve","_initPromise","_gracefulShutdown","_deactivate","_backend","destroy","backend","defer","_isShuttingDown","_gracefulShutdownResolve","fn","paramCleaner","mutating","async","op","add","_activate","apply","clearTimeout","warn","stats","ctimeMs","uid","gid","dev","Err","super","code","message","once","PromisifiedFS","wrapCallback","cb","promises","catch","normalizePath","splitPath","reduce","reducer","joinPath","replace","unshift","ancestors","last","lastIndexOf","paths","startsWith","l","m","k","c","fatal","indexOf","toLowerCase","RangeError","q","f","min","Uint16Array","h","d","b","String","fromCharCode","subarray","g","n","TextEncoder","TextDecoder","Object","defineProperty","prototype","stream","Uint8Array","charCodeAt","p","Buffer","from","buffer","byteOffset","Blob","URL","createObjectURL","XMLHttpRequest","send","responseText","revokeObjectURL","ArrayBuffer","window","string","callFirst","arguments","context","callNow","called","assertPath","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","process","isAbsolute","trailingSeparator","joined","arg","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","hasRoot","end","matchedSlash","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","base","_format","ret","delimiter","win32","nativeFS","NativeFS","subscriptions","vscode","workspace","registerFileSystemProvider","isCaseSensitive","isReadonly","memFS","MemFS","encoder","welcomeDirectoryUri","Uri","welcomeREADMEUri","workspaceFileUri","createDirectory","_","exists","create","overwrite","commands","registerCommand","directoryPath","executeCommand","showErrorMessage","updateWorkspaceFolders","workspaceFolders","uri","showInputBox","placeHolder","LightningFS","_emitter","EventEmitter","_bufferedEvents","onDidChangeFile","event","fs","pfs","fstat","isDirectory","FileType","Directory","isFile","File","isSymbolicLink","SymbolicLink","Unknown","mtime","ctime","FileSystemError","FileNotFound","files","content","with","FileIsADirectory","FileExists","_fireSoon","FileChangeType","Changed","Created","oldUri","newUri","newUriStat","mkdirp","dirPath","filePath","Deleted","all","_resource","Disposable","events","_fireSoonHandle","fire","Array","forEach","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","enumerable","globalThis","Function","obj","prop","hasOwnProperty","Symbol","toStringTag"],"mappings":"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","file":"extension.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbName = dbName;\r\n        this._storeName = storeName;\r\n        this._init();\r\n    }\r\n    _init() {\r\n        if (this._dbp) {\r\n            return;\r\n        }\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(this._dbName);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(this._storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        this._init();\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n    _close() {\r\n        this._init();\r\n        return this._dbp.then(db => {\r\n            db.close();\r\n            this._dbp = undefined;\r\n        });\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readwrite', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction update(key, updater, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        const req = store.get(key);\r\n        req.onsuccess = () => {\r\n            store.put(updater(req.result), key);\r\n        };\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readwrite', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\r\nfunction close(store = getDefaultStore()) {\r\n    return store._close();\r\n}\n\nexport { Store, get, set, update, del, clear, keys, close };\n","const path = require(\"./path.js\");\nconst { EEXIST, ENOENT, ENOTDIR, ENOTEMPTY } = require(\"./errors.js\");\n\nconst STAT = 0;\n\nmodule.exports = class CacheFS {\n  constructor() {\n  }\n  _makeRoot(root = new Map()) {\n    root.set(STAT, { mode: 0o777, type: \"dir\", size: 0, ino: 0, mtimeMs: Date.now() });\n    return root\n  }\n  activate(superblock = null) {\n    if (superblock === null) {\n      this._root = new Map([[\"/\", this._makeRoot()]]);\n    } else if (typeof superblock === 'string') {\n      this._root = new Map([[\"/\", this._makeRoot(this.parse(superblock))]]);\n    } else {\n      this._root = superblock\n    }\n  }\n  get activated () {\n    return !!this._root\n  }\n  deactivate () {\n    this._root = void 0\n  }\n  size () {\n    // subtract 1 to ignore the root directory itself from the count.\n    return this._countInodes(this._root.get(\"/\")) - 1;\n  }\n  _countInodes(map) {\n    let count = 1;\n    for (let [key, val] of map) {\n      if (key === STAT) continue;\n      count += this._countInodes(val);\n    }\n    return count;\n  }\n  autoinc () {\n    let val = this._maxInode(this._root.get(\"/\")) + 1;\n    return val;\n  }\n  _maxInode(map) {\n    let max = map.get(STAT).ino;\n    for (let [key, val] of map) {\n      if (key === STAT) continue;\n      max = Math.max(max, this._maxInode(val));\n    }\n    return max;\n  }\n  print(root = this._root.get(\"/\")) {\n    let str = \"\";\n    const printTree = (root, indent) => {\n      for (let [file, node] of root) {\n        if (file === 0) continue;\n        let stat = node.get(STAT);\n        let mode = stat.mode.toString(8);\n        str += `${\"\\t\".repeat(indent)}${file}\\t${mode}`\n        if (stat.type === \"file\") {\n          str += `\\t${stat.size}\\t${stat.mtimeMs}\\n`;\n        } else {\n          str += `\\n`\n          printTree(node, indent + 1);\n        }\n      }\n    };\n    printTree(root, 0);\n    return str;\n  }\n  parse(print) {\n    let autoinc = 0;\n\n    function mk(stat) {\n      const ino = ++autoinc;\n      // TODO: Use a better heuristic for determining whether file or dir\n      const type = stat.length === 1 ? \"dir\" : \"file\"\n      let [mode, size, mtimeMs] = stat;\n      mode = parseInt(mode, 8);\n      size = size ? parseInt(size) : 0;\n      mtimeMs = mtimeMs ? parseInt(mtimeMs) : Date.now();\n      return new Map([[STAT, { mode, type, size, mtimeMs, ino }]]);\n    }\n\n    let lines = print.trim().split(\"\\n\");\n    let _root = this._makeRoot();\n    let stack = [\n      { indent: -1, node: _root },\n      { indent: 0, node: null }\n    ];\n    for (let line of lines) {\n      let prefix = line.match(/^\\t*/)[0];\n      let indent = prefix.length;\n      line = line.slice(indent);\n      let [filename, ...stat] = line.split(\"\\t\");\n      let node = mk(stat);\n      if (indent <= stack[stack.length - 1].indent) {\n        while (indent <= stack[stack.length - 1].indent) {\n          stack.pop();\n        }\n      }\n      stack.push({ indent, node });\n      let cd = stack[stack.length - 2].node;\n      cd.set(filename, node);\n    }\n    return _root;\n  }\n  _lookup(filepath, follow = true) {\n    let dir = this._root;\n    let partialPath = '/'\n    let parts = path.split(filepath)\n    for (let i = 0; i < parts.length; ++ i) {\n      let part = parts[i];\n      dir = dir.get(part);\n      if (!dir) throw new ENOENT(filepath);\n      // Follow symlinks\n      if (follow || i < parts.length - 1) {\n        const stat = dir.get(STAT)\n        if (stat.type === 'symlink') {\n          let target = path.resolve(partialPath, stat.target)\n          dir = this._lookup(target)\n        }\n        if (!partialPath) {\n          partialPath = part\n        } else {\n          partialPath = path.join(partialPath, part)\n        }\n      }\n    }\n    return dir;\n  }\n  mkdir(filepath, { mode }) {\n    if (filepath === \"/\") throw new EEXIST();\n    let dir = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    if (dir.has(basename)) {\n      throw new EEXIST();\n    }\n    let entry = new Map();\n    let stat = {\n      mode,\n      type: \"dir\",\n      size: 0,\n      mtimeMs: Date.now(),\n      ino: this.autoinc(),\n    };\n    entry.set(STAT, stat);\n    dir.set(basename, entry);\n  }\n  rmdir(filepath) {\n    let dir = this._lookup(filepath);\n    if (dir.get(STAT).type !== 'dir') throw new ENOTDIR();\n    // check it's empty (size should be 1 for just StatSym)\n    if (dir.size > 1) throw new ENOTEMPTY();\n    // remove from parent\n    let parent = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    parent.delete(basename);\n  }\n  readdir(filepath) {\n    let dir = this._lookup(filepath);\n    if (dir.get(STAT).type !== 'dir') throw new ENOTDIR();\n    return [...dir.keys()].filter(key => typeof key === \"string\");\n  }\n  writeStat(filepath, size, { mode }) {\n    let ino;\n    try {\n      let oldStat = this.stat(filepath);\n      if (mode == null) {\n        mode = oldStat.mode;\n      }\n      ino = oldStat.ino;\n    } catch (err) {}\n    if (mode == null) {\n      mode = 0o666;\n    }\n    if (ino == null) {\n      ino = this.autoinc();\n    }\n    let dir = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    let stat = {\n      mode,\n      type: \"file\",\n      size,\n      mtimeMs: Date.now(),\n      ino,\n    };\n    let entry = new Map();\n    entry.set(STAT, stat);\n    dir.set(basename, entry);\n    return stat;\n  }\n  unlink(filepath) {\n    // remove from parent\n    let parent = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    parent.delete(basename);\n  }\n  rename(oldFilepath, newFilepath) {\n    let basename = path.basename(newFilepath);\n    // Note: do both lookups before making any changes\n    // so if lookup throws, we don't lose data (issue #23)\n    // grab references\n    let entry = this._lookup(oldFilepath);\n    let destDir = this._lookup(path.dirname(newFilepath));\n    // insert into new parent directory\n    destDir.set(basename, entry);\n    // remove from old parent directory\n    this.unlink(oldFilepath)\n  }\n  stat(filepath) {\n    return this._lookup(filepath).get(STAT);\n  }\n  lstat(filepath) {\n    return this._lookup(filepath, false).get(STAT);\n  }\n  readlink(filepath) {\n    return this._lookup(filepath, false).get(STAT).target;\n  }\n  symlink(target, filepath) {\n    let ino, mode;\n    try {\n      let oldStat = this.stat(filepath);\n      if (mode === null) {\n        mode = oldStat.mode;\n      }\n      ino = oldStat.ino;\n    } catch (err) {}\n    if (mode == null) {\n      mode = 0o120000;\n    }\n    if (ino == null) {\n      ino = this.autoinc();\n    }\n    let dir = this._lookup(path.dirname(filepath));\n    let basename = path.basename(filepath);\n    let stat = {\n      mode,\n      type: \"symlink\",\n      target,\n      size: 0,\n      mtimeMs: Date.now(),\n      ino,\n    };\n    let entry = new Map();\n    entry.set(STAT, stat);\n    dir.set(basename, entry);\n    return stat;\n  }\n  _du (dir) {\n    let size = 0;\n    for (const [name, entry] of dir.entries()) {\n      if (name === STAT) {\n        size += entry.size;\n      } else {\n        size += this._du(entry);\n      }\n    }\n    return size;\n  }\n  du (filepath) {\n    let dir = this._lookup(filepath);\n    return this._du(dir);\n  }\n};\n","const { encode, decode } = require(\"isomorphic-textencoder\");\nconst debounce = require(\"just-debounce-it\");\n\nconst CacheFS = require(\"./CacheFS.js\");\nconst { ENOENT, ENOTEMPTY, ETIMEDOUT } = require(\"./errors.js\");\nconst IdbBackend = require(\"./IdbBackend.js\");\nconst HttpBackend = require(\"./HttpBackend.js\")\nconst Mutex = require(\"./Mutex.js\");\nconst Mutex2 = require(\"./Mutex2.js\");\n\nconst path = require(\"./path.js\");\n\nmodule.exports = class DefaultBackend {\n  constructor() {\n    this.saveSuperblock = debounce(() => {\n      this._saveSuperblock();\n    }, 500);\n  }\n  async init (name, {\n    wipe,\n    url,\n    urlauto,\n    fileDbName = name,\n    fileStoreName = name + \"_files\",\n    lockDbName = name + \"_lock\",\n    lockStoreName = name + \"_lock\",\n  } = {}) {\n    this._name = name\n    this._idb = new IdbBackend(fileDbName, fileStoreName);\n    this._mutex = navigator.locks ? new Mutex2(name) : new Mutex(lockDbName, lockStoreName);\n    this._cache = new CacheFS(name);\n    this._opts = { wipe, url };\n    this._needsWipe = !!wipe;\n    if (url) {\n      this._http = new HttpBackend(url)\n      this._urlauto = !!urlauto\n    }\n  }\n  async activate() {\n    if (this._cache.activated) return\n    // Wipe IDB if requested\n    if (this._needsWipe) {\n      this._needsWipe = false;\n      await this._idb.wipe()\n      await this._mutex.release({ force: true })\n    }\n    if (!(await this._mutex.has())) await this._mutex.wait()\n    // Attempt to load FS from IDB backend\n    const root = await this._idb.loadSuperblock()\n    if (root) {\n      this._cache.activate(root);\n    } else if (this._http) {\n      // If that failed, attempt to load FS from HTTP backend\n      const text = await this._http.loadSuperblock()\n      this._cache.activate(text)\n      await this._saveSuperblock();\n    } else {\n      // If there is no HTTP backend, start with an empty filesystem\n      this._cache.activate()\n    }\n    if (await this._mutex.has()) {\n      return\n    } else {\n      throw new ETIMEDOUT()\n    }\n  }\n  async deactivate() {\n    if (await this._mutex.has()) {\n      await this._saveSuperblock()\n    }\n    this._cache.deactivate()\n    try {\n      await this._mutex.release()\n    } catch (e) {\n      console.log(e)\n    }\n    await this._idb.close()\n  }\n  async _saveSuperblock() {\n    if (this._cache.activated) {\n      this._lastSavedAt = Date.now()\n      await this._idb.saveSuperblock(this._cache._root);\n    }\n  }\n  _writeStat(filepath, size, opts) {\n    let dirparts = path.split(path.dirname(filepath))\n    let dir = dirparts.shift()\n    for (let dirpart of dirparts) {\n      dir = path.join(dir, dirpart)\n      try {\n        this._cache.mkdir(dir, { mode: 0o777 })\n      } catch (e) {}\n    }\n    return this._cache.writeStat(filepath, size, opts)\n  }\n  async readFile(filepath, opts) {\n    const { encoding } = opts;\n    if (encoding && encoding !== 'utf8') throw new Error('Only \"utf8\" encoding is supported in readFile');\n    let data = null, stat = null\n    try {\n      stat = this._cache.stat(filepath);\n      data = await this._idb.readFile(stat.ino)\n    } catch (e) {\n      if (!this._urlauto) throw e\n    }\n    if (!data && this._http) {\n      let lstat = this._cache.lstat(filepath)\n      while (lstat.type === 'symlink') {\n        filepath = path.resolve(path.dirname(filepath), lstat.target)\n        lstat = this._cache.lstat(filepath)\n      }\n      data = await this._http.readFile(filepath)\n    }\n    if (data) {\n      if (!stat || stat.size != data.byteLength) {\n        stat = await this._writeStat(filepath, data.byteLength, { mode: stat ? stat.mode : 0o666 })\n        this.saveSuperblock() // debounced\n      }\n      if (encoding === \"utf8\") {\n        data = decode(data);\n      }\n    }\n    if (!stat) throw new ENOENT(filepath)\n    return data;\n  }\n  async writeFile(filepath, data, opts) {\n    const { mode, encoding = \"utf8\" } = opts;\n    if (typeof data === \"string\") {\n      if (encoding !== \"utf8\") {\n        throw new Error('Only \"utf8\" encoding is supported in writeFile');\n      }\n      data = encode(data);\n    }\n    const stat = await this._cache.writeStat(filepath, data.byteLength, { mode });\n    await this._idb.writeFile(stat.ino, data)\n  }\n  async unlink(filepath, opts) {\n    const stat = this._cache.lstat(filepath);\n    this._cache.unlink(filepath);\n    if (stat.type !== 'symlink') {\n      await this._idb.unlink(stat.ino)\n    }\n  }\n  readdir(filepath, opts) {\n    return this._cache.readdir(filepath);\n  }\n  mkdir(filepath, opts) {\n    const { mode = 0o777 } = opts;\n    this._cache.mkdir(filepath, { mode });\n  }\n  rmdir(filepath, opts) {\n    // Never allow deleting the root directory.\n    if (filepath === \"/\") {\n      throw new ENOTEMPTY();\n    }\n    this._cache.rmdir(filepath);\n  }\n  rename(oldFilepath, newFilepath) {\n    this._cache.rename(oldFilepath, newFilepath);\n  }\n  stat(filepath, opts) {\n    return this._cache.stat(filepath);\n  }\n  lstat(filepath, opts) {\n    return this._cache.lstat(filepath);\n  }\n  readlink(filepath, opts) {\n    return this._cache.readlink(filepath);\n  }\n  symlink(target, filepath) {\n    this._cache.symlink(target, filepath);\n  }\n  async backFile(filepath, opts) {\n    let size = await this._http.sizeFile(filepath)\n    await this._writeStat(filepath, size, opts)\n  }\n  du(filepath) {\n    return this._cache.du(filepath);\n  }\n}\n","module.exports = class HttpBackend {\n  constructor(url) {\n    this._url = url;\n  }\n  loadSuperblock() {\n    return fetch(this._url + '/.superblock.txt').then(res => res.ok ? res.text() : null)\n  }\n  async readFile(filepath) {\n    const res = await fetch(this._url + filepath)\n    if (res.status === 200) {\n      return res.arrayBuffer()\n    } else {\n      throw new Error('ENOENT')\n    }\n  }\n  async sizeFile(filepath) {\n    const res = await fetch(this._url + filepath, { method: 'HEAD' })\n    if (res.status === 200) {\n      return res.headers.get('content-length')\n    } else {\n      throw new Error('ENOENT')\n    }\n  }\n}\n","const idb = require(\"@isomorphic-git/idb-keyval\");\n\nmodule.exports = class IdbBackend {\n  constructor(dbname, storename) {\n    this._database = dbname;\n    this._storename = storename;\n    this._store = new idb.Store(this._database, this._storename);\n  }\n  saveSuperblock(superblock) {\n    return idb.set(\"!root\", superblock, this._store);\n  }\n  loadSuperblock() {\n    return idb.get(\"!root\", this._store);\n  }\n  readFile(inode) {\n    return idb.get(inode, this._store)\n  }\n  writeFile(inode, data) {\n    return idb.set(inode, data, this._store)\n  }\n  unlink(inode) {\n    return idb.del(inode, this._store)\n  }\n  wipe() {\n    return idb.clear(this._store)\n  }\n  close() {\n    return idb.close(this._store)\n  }\n}\n","const idb = require(\"@isomorphic-git/idb-keyval\");\n\nconst sleep = ms => new Promise(r => setTimeout(r, ms))\n\nmodule.exports = class Mutex {\n  constructor(dbname, storename) {\n    this._id = Math.random()\n    this._database = dbname\n    this._storename = storename\n    this._store = new idb.Store(this._database, this._storename)\n    this._lock = null\n  }\n  async has ({ margin = 2000 } = {}) {\n    if (this._lock && this._lock.holder === this._id) {\n      const now = Date.now()\n      if (this._lock.expires > now + margin) {\n        return true\n      } else {\n        return await this.renew()\n      }\n    } else {\n      return false\n    }\n  }\n  // Returns true if successful\n  async renew ({ ttl = 5000 } = {}) {\n    let success\n    await idb.update(\"lock\", (current) => {\n      const now = Date.now()\n      const expires = now + ttl\n      success = current && current.holder === this._id\n      this._lock = success ? { holder: this._id, expires } : current\n      return this._lock\n    }, this._store)\n    return success\n  }\n  // Returns true if successful\n  async acquire ({ ttl = 5000 } = {}) {\n    let success\n    let expired\n    let doubleLock\n    await idb.update(\"lock\", (current) => {\n      const now = Date.now()\n      const expires = now + ttl\n      expired = current && current.expires < now\n      success = current === undefined || expired\n      doubleLock = current && current.holder === this._id\n      this._lock = success ? { holder: this._id, expires } : current\n      return this._lock\n    }, this._store)\n    if (doubleLock) {\n      throw new Error('Mutex double-locked')\n    }\n    return success\n  }\n  // check at 10Hz, give up after 10 minutes\n  async wait ({ interval = 100, limit = 6000, ttl } = {}) {\n    while (limit--) {\n      if (await this.acquire({ ttl })) return true\n      await sleep(interval)\n    }\n    throw new Error('Mutex timeout')\n  }\n  // Returns true if successful\n  async release ({ force = false } = {}) {\n    let success\n    let doubleFree\n    let someoneElseHasIt\n    await idb.update(\"lock\", (current) => {\n      success = force || (current && current.holder === this._id)\n      doubleFree = current === void 0\n      someoneElseHasIt = current && current.holder !== this._id\n      this._lock = success ? void 0 : current\n      return this._lock\n    }, this._store)\n    await idb.close(this._store)\n    if (!success && !force) {\n      if (doubleFree) throw new Error('Mutex double-freed')\n      if (someoneElseHasIt) throw new Error('Mutex lost ownership')\n    }\n    return success\n  }\n}\n","module.exports = class Mutex {\n  constructor(name) {\n    this._id = Math.random()\n    this._database = name\n    this._has = false\n    this._release = null\n  }\n  async has () {\n    return this._has\n  }\n  // Returns true if successful\n  async acquire () {\n    return new Promise(resolve => {\n      navigator.locks.request(this._database + \"_lock\", {ifAvailable: true}, lock => {\n        this._has = !!lock\n        resolve(!!lock)\n        return new Promise(resolve => {\n          this._release = resolve\n        })\n      }); \n    })\n  }\n  // Returns true if successful, gives up after 10 minutes\n  async wait ({ timeout = 600000 } = {}) {\n    return new Promise((resolve, reject) => {\n      const controller = new AbortController();\n      setTimeout(() => {\n        controller.abort();\n        reject(new Error('Mutex timeout'))\n      }, timeout);\n      navigator.locks.request(this._database + \"_lock\", {signal: controller.signal}, lock => {\n        this._has = !!lock\n        resolve(!!lock)\n        return new Promise(resolve => {\n          this._release = resolve\n        })\n      }); \n    })\n  }\n  // Returns true if successful\n  async release ({ force = false } = {}) {\n    this._has = false\n    if (this._release) {\n      this._release()\n    } else if (force) {\n      navigator.locks.request(this._database + \"_lock\", {steal: true}, lock => true)\n    }\n  }\n}\n","const DefaultBackend = require(\"./DefaultBackend.js\");\nconst Stat = require(\"./Stat.js\");\n\nconst path = require(\"./path.js\");\n\nfunction cleanParamsFilepathOpts(filepath, opts, ...rest) {\n  // normalize paths\n  filepath = path.normalize(filepath);\n  // strip out callbacks\n  if (typeof opts === \"undefined\" || typeof opts === \"function\") {\n    opts = {};\n  }\n  // expand string options to encoding options\n  if (typeof opts === \"string\") {\n    opts = {\n      encoding: opts,\n    };\n  }\n  return [filepath, opts, ...rest];\n}\n\nfunction cleanParamsFilepathDataOpts(filepath, data, opts, ...rest) {\n  // normalize paths\n  filepath = path.normalize(filepath);\n  // strip out callbacks\n  if (typeof opts === \"undefined\" || typeof opts === \"function\") {\n    opts = {};\n  }\n  // expand string options to encoding options\n  if (typeof opts === \"string\") {\n    opts = {\n      encoding: opts,\n    };\n  }\n  return [filepath, data, opts, ...rest];\n}\n\nfunction cleanParamsFilepathFilepath(oldFilepath, newFilepath, ...rest) {\n  // normalize paths\n  return [path.normalize(oldFilepath), path.normalize(newFilepath), ...rest];\n}\n\nmodule.exports = class PromisifiedFS {\n  constructor(name, options = {}) {\n    this.init = this.init.bind(this)\n    this.readFile = this._wrap(this.readFile, cleanParamsFilepathOpts, false)\n    this.writeFile = this._wrap(this.writeFile, cleanParamsFilepathDataOpts, true)\n    this.unlink = this._wrap(this.unlink, cleanParamsFilepathOpts, true)\n    this.readdir = this._wrap(this.readdir, cleanParamsFilepathOpts, false)\n    this.mkdir = this._wrap(this.mkdir, cleanParamsFilepathOpts, true)\n    this.rmdir = this._wrap(this.rmdir, cleanParamsFilepathOpts, true)\n    this.rename = this._wrap(this.rename, cleanParamsFilepathFilepath, true)\n    this.stat = this._wrap(this.stat, cleanParamsFilepathOpts, false)\n    this.lstat = this._wrap(this.lstat, cleanParamsFilepathOpts, false)\n    this.readlink = this._wrap(this.readlink, cleanParamsFilepathOpts, false)\n    this.symlink = this._wrap(this.symlink, cleanParamsFilepathFilepath, true)\n    this.backFile = this._wrap(this.backFile, cleanParamsFilepathOpts, true)\n    this.du = this._wrap(this.du, cleanParamsFilepathOpts, false);\n\n    this._deactivationPromise = null\n    this._deactivationTimeout = null\n    this._activationPromise = null\n\n    this._operations = new Set()\n\n    if (name) {\n      this.init(name, options)\n    }\n  }\n  async init (...args) {\n    if (this._initPromiseResolve) await this._initPromise;\n    this._initPromise = this._init(...args)\n    return this._initPromise\n  }\n  async _init (name, options = {}) {\n    await this._gracefulShutdown();\n    if (this._activationPromise) await this._deactivate()\n\n    if (this._backend && this._backend.destroy) {\n      await this._backend.destroy();\n    }\n    this._backend = options.backend || new DefaultBackend();\n    if (this._backend.init) {\n      await this._backend.init(name, options);\n    }\n\n    if (this._initPromiseResolve) {\n      this._initPromiseResolve();\n      this._initPromiseResolve = null;\n    }\n    // The next comment starting with the \"fs is initially activated when constructed\"?\n    // That can create contention for the mutex if two threads try to init at the same time\n    // so I've added an option to disable that behavior.\n    if (!options.defer) {\n      // The fs is initially activated when constructed (in order to wipe/save the superblock)\n      // This is not awaited, because that would create a cycle.\n      this.stat('/')\n    }\n  }\n  async _gracefulShutdown () {\n    if (this._operations.size > 0) {\n      this._isShuttingDown = true\n      await new Promise(resolve => this._gracefulShutdownResolve = resolve);\n      this._isShuttingDown = false\n      this._gracefulShutdownResolve = null\n    }\n  }\n  _wrap (fn, paramCleaner, mutating) {\n    return async (...args) => {\n      args = paramCleaner(...args)\n      let op = {\n        name: fn.name,\n        args,\n      }\n      this._operations.add(op)\n      try {\n        await this._activate()\n        return await fn.apply(this, args)\n      } finally {\n        this._operations.delete(op)\n        if (mutating) this._backend.saveSuperblock() // this is debounced\n        if (this._operations.size === 0) {\n          if (!this._deactivationTimeout) clearTimeout(this._deactivationTimeout)\n          this._deactivationTimeout = setTimeout(this._deactivate.bind(this), 500)\n        }\n      }\n    }\n  }\n  async _activate() {\n    if (!this._initPromise) console.warn(new Error(`Attempted to use LightningFS ${this._name} before it was initialized.`))\n    await this._initPromise\n    if (this._deactivationTimeout) {\n      clearTimeout(this._deactivationTimeout)\n      this._deactivationTimeout = null\n    }\n    if (this._deactivationPromise) await this._deactivationPromise\n    this._deactivationPromise = null\n    if (!this._activationPromise) {\n      this._activationPromise = this._backend.activate ? this._backend.activate() : Promise.resolve();\n    }\n    await this._activationPromise\n  }\n  async _deactivate() {\n    if (this._activationPromise) await this._activationPromise\n\n    if (!this._deactivationPromise) {\n      this._deactivationPromise = this._backend.deactivate ? this._backend.deactivate() : Promise.resolve();\n    }\n    this._activationPromise = null\n    if (this._gracefulShutdownResolve) this._gracefulShutdownResolve()\n    return this._deactivationPromise\n  }\n  async readFile(filepath, opts) {\n    return this._backend.readFile(filepath, opts);\n  }\n  async writeFile(filepath, data, opts) {\n    await this._backend.writeFile(filepath, data, opts);\n    return null\n  }\n  async unlink(filepath, opts) {\n    await this._backend.unlink(filepath, opts);\n    return null\n  }\n  async readdir(filepath, opts) {\n    return this._backend.readdir(filepath, opts);\n  }\n  async mkdir(filepath, opts) {\n    await this._backend.mkdir(filepath, opts);\n    return null\n  }\n  async rmdir(filepath, opts) {\n    await this._backend.rmdir(filepath, opts);\n    return null;\n  }\n  async rename(oldFilepath, newFilepath) {\n    await this._backend.rename(oldFilepath, newFilepath);\n    return null;\n  }\n  async stat(filepath, opts) {\n    const data = await this._backend.stat(filepath, opts);\n    return new Stat(data);\n  }\n  async lstat(filepath, opts) {\n    const data = await this._backend.lstat(filepath, opts);\n    return new Stat(data);\n  }\n  async readlink(filepath, opts) {\n    return this._backend.readlink(filepath, opts);\n  }\n  async symlink(target, filepath) {\n    await this._backend.symlink(target, filepath);\n    return null;\n  }\n  async backFile(filepath, opts) {\n    await this._backend.backFile(filepath, opts);\n    return null\n  }\n  async du(filepath) {\n    return this._backend.du(filepath);\n  }\n}\n","module.exports = class Stat {\n  constructor(stats) {\n    this.type = stats.type;\n    this.mode = stats.mode;\n    this.size = stats.size;\n    this.ino = stats.ino;\n    this.mtimeMs = stats.mtimeMs;\n    this.ctimeMs = stats.ctimeMs || stats.mtimeMs;\n    this.uid = 1;\n    this.gid = 1;\n    this.dev = 1;\n  }\n  isFile() {\n    return this.type === \"file\";\n  }\n  isDirectory() {\n    return this.type === \"dir\";\n  }\n  isSymbolicLink() {\n    return this.type === \"symlink\";\n  }\n};\n","function Err(name) {\n  return class extends Error {\n    constructor(...args) {\n      super(...args);\n      this.code = name;\n      if (this.message) {\n        this.message = name + \": \" + this.message;\n      } else {\n        this.message = name;\n      }\n    }\n  };\n}\n\nconst EEXIST = Err(\"EEXIST\");\nconst ENOENT = Err(\"ENOENT\");\nconst ENOTDIR = Err(\"ENOTDIR\");\nconst ENOTEMPTY = Err(\"ENOTEMPTY\");\nconst ETIMEDOUT = Err(\"ETIMEDOUT\");\n\nmodule.exports = { EEXIST, ENOENT, ENOTDIR, ENOTEMPTY, ETIMEDOUT };\n","const once = require(\"just-once\");\n\nconst PromisifiedFS = require('./PromisifiedFS');\n\nfunction wrapCallback (opts, cb) {\n  if (typeof opts === \"function\") {\n    cb = opts;\n  }\n  cb = once(cb);\n  const resolve = (...args) => cb(null, ...args)\n  return [resolve, cb];\n}\n\nmodule.exports = class FS {\n  constructor(...args) {\n    this.promises = new PromisifiedFS(...args)\n    // Needed so things don't break if you destructure fs and pass individual functions around\n    this.init = this.init.bind(this)\n    this.readFile = this.readFile.bind(this)\n    this.writeFile = this.writeFile.bind(this)\n    this.unlink = this.unlink.bind(this)\n    this.readdir = this.readdir.bind(this)\n    this.mkdir = this.mkdir.bind(this)\n    this.rmdir = this.rmdir.bind(this)\n    this.rename = this.rename.bind(this)\n    this.stat = this.stat.bind(this)\n    this.lstat = this.lstat.bind(this)\n    this.readlink = this.readlink.bind(this)\n    this.symlink = this.symlink.bind(this)\n    this.backFile = this.backFile.bind(this)\n    this.du = this.du.bind(this)\n  }\n  init(name, options) {\n    return this.promises.init(name, options)\n  }\n  readFile(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.readFile(filepath, opts).then(resolve).catch(reject)\n  }\n  writeFile(filepath, data, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.writeFile(filepath, data, opts).then(resolve).catch(reject);\n  }\n  unlink(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.unlink(filepath, opts).then(resolve).catch(reject);\n  }\n  readdir(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.readdir(filepath, opts).then(resolve).catch(reject);\n  }\n  mkdir(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.mkdir(filepath, opts).then(resolve).catch(reject)\n  }\n  rmdir(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.rmdir(filepath, opts).then(resolve).catch(reject)\n  }\n  rename(oldFilepath, newFilepath, cb) {\n    const [resolve, reject] = wrapCallback(cb);\n    this.promises.rename(oldFilepath, newFilepath).then(resolve).catch(reject)\n  }\n  stat(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.stat(filepath).then(resolve).catch(reject);\n  }\n  lstat(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.lstat(filepath).then(resolve).catch(reject);\n  }\n  readlink(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.readlink(filepath).then(resolve).catch(reject);\n  }\n  symlink(target, filepath, cb) {\n    const [resolve, reject] = wrapCallback(cb);\n    this.promises.symlink(target, filepath).then(resolve).catch(reject);\n  }\n  backFile(filepath, opts, cb) {\n    const [resolve, reject] = wrapCallback(opts, cb);\n    this.promises.backFile(filepath, opts).then(resolve).catch(reject);\n  }\n  du(filepath, cb) {\n    const [resolve, reject] = wrapCallback(cb);\n    this.promises.du(filepath).then(resolve).catch(reject);\n  }\n}\n","function normalizePath(path) {\n  if (path.length === 0) {\n    return \".\";\n  }\n  let parts = splitPath(path);\n  parts = parts.reduce(reducer, []);\n  return joinPath(...parts);\n}\n\nfunction resolvePath(...paths) {\n  let result = '';\n  for (let path of paths) {\n    if (path.startsWith('/')) {\n      result = path;\n    } else {\n      result = normalizePath(joinPath(result, path));\n    }\n  }\n  return result;\n}\n\nfunction joinPath(...parts) {\n  if (parts.length === 0) return \"\";\n  let path = parts.join(\"/\");\n  // Replace consecutive '/'\n  path = path.replace(/\\/{2,}/g, \"/\");\n  return path;\n}\n\nfunction splitPath(path) {\n  if (path.length === 0) return [];\n  if (path === \"/\") return [\"/\"];\n  let parts = path.split(\"/\");\n  if (parts[parts.length - 1] === '') {\n      parts.pop();\n  }\n  if (path[0] === \"/\") {\n    // assert(parts[0] === '')\n    parts[0] = \"/\";\n  } else {\n    if (parts[0] !== \".\") {\n      parts.unshift(\".\");\n    }\n  }\n  return parts;\n}\n\nfunction dirname(path) {\n  const last = path.lastIndexOf(\"/\");\n  if (last === -1) throw new Error(`Cannot get dirname of \"${path}\"`);\n  if (last === 0) return \"/\";\n  return path.slice(0, last);\n}\n\nfunction basename(path) {\n  if (path === \"/\") throw new Error(`Cannot get basename of \"${path}\"`);\n  const last = path.lastIndexOf(\"/\");\n  if (last === -1) return path;\n  return path.slice(last + 1);\n}\n\nfunction reducer(ancestors, current) {\n  // Initial condition\n  if (ancestors.length === 0) {\n    ancestors.push(current);\n    return ancestors;\n  }\n  // assert(ancestors.length > 0)\n  // assert(ancestors[0] === '.' || ancestors[0] === '/')\n\n  // Collapse '.' references\n  if (current === \".\") return ancestors;\n\n  // Collapse '..' references\n  if (current === \"..\") {\n    if (ancestors.length === 1) {\n      if (ancestors[0] === \"/\") {\n        throw new Error(\"Unable to normalize path - traverses above root directory\");\n      }\n      // assert(ancestors[0] === '.')\n      if (ancestors[0] === \".\") {\n        ancestors.push(current);\n        return ancestors;\n      }\n    }\n    // assert(ancestors.length > 1)\n    if (ancestors[ancestors.length - 1] === \"..\") {\n      ancestors.push(\"..\");\n      return ancestors;\n    } else {\n      ancestors.pop();\n      return ancestors;\n    }\n  }\n\n  ancestors.push(current);\n  return ancestors;\n}\n\nmodule.exports = {\n  join: joinPath,\n  normalize: normalizePath,\n  split: splitPath,\n  basename,\n  dirname,\n  resolve: resolvePath,\n};\n","(function(l){function m(){}function k(a,c){a=void 0===a?\"utf-8\":a;c=void 0===c?{fatal:!1}:c;if(-1===r.indexOf(a.toLowerCase()))throw new RangeError(\"Failed to construct 'TextDecoder': The encoding label provided ('\"+a+\"') is invalid.\");if(c.fatal)throw Error(\"Failed to construct 'TextDecoder': the 'fatal' option is unsupported.\");}function t(a){return Buffer.from(a.buffer,a.byteOffset,a.byteLength).toString(\"utf-8\")}function u(a){var c=URL.createObjectURL(new Blob([a],{type:\"text/plain;charset=UTF-8\"}));\ntry{var f=new XMLHttpRequest;f.open(\"GET\",c,!1);f.send();return f.responseText}catch(e){return q(a)}finally{URL.revokeObjectURL(c)}}function q(a){for(var c=0,f=Math.min(65536,a.length+1),e=new Uint16Array(f),h=[],d=0;;){var b=c<a.length;if(!b||d>=f-1){h.push(String.fromCharCode.apply(null,e.subarray(0,d)));if(!b)return h.join(\"\");a=a.subarray(c);d=c=0}b=a[c++];if(0===(b&128))e[d++]=b;else if(192===(b&224)){var g=a[c++]&63;e[d++]=(b&31)<<6|g}else if(224===(b&240)){g=a[c++]&63;var n=a[c++]&63;e[d++]=\n(b&31)<<12|g<<6|n}else if(240===(b&248)){g=a[c++]&63;n=a[c++]&63;var v=a[c++]&63;b=(b&7)<<18|g<<12|n<<6|v;65535<b&&(b-=65536,e[d++]=b>>>10&1023|55296,b=56320|b&1023);e[d++]=b}}}if(l.TextEncoder&&l.TextDecoder)return!1;var r=[\"utf-8\",\"utf8\",\"unicode-1-1-utf-8\"];Object.defineProperty(m.prototype,\"encoding\",{value:\"utf-8\"});m.prototype.encode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to encode: the 'stream' option is unsupported.\");c=0;for(var f=a.length,e=0,h=Math.max(32,\nf+(f>>>1)+7),d=new Uint8Array(h>>>3<<3);c<f;){var b=a.charCodeAt(c++);if(55296<=b&&56319>=b){if(c<f){var g=a.charCodeAt(c);56320===(g&64512)&&(++c,b=((b&1023)<<10)+(g&1023)+65536)}if(55296<=b&&56319>=b)continue}e+4>d.length&&(h+=8,h*=1+c/a.length*2,h=h>>>3<<3,g=new Uint8Array(h),g.set(d),d=g);if(0===(b&4294967168))d[e++]=b;else{if(0===(b&4294965248))d[e++]=b>>>6&31|192;else if(0===(b&4294901760))d[e++]=b>>>12&15|224,d[e++]=b>>>6&63|128;else if(0===(b&4292870144))d[e++]=b>>>18&7|240,d[e++]=b>>>12&\n63|128,d[e++]=b>>>6&63|128;else continue;d[e++]=b&63|128}}return d.slice?d.slice(0,e):d.subarray(0,e)};Object.defineProperty(k.prototype,\"encoding\",{value:\"utf-8\"});Object.defineProperty(k.prototype,\"fatal\",{value:!1});Object.defineProperty(k.prototype,\"ignoreBOM\",{value:!1});var p=q;\"function\"===typeof Buffer&&Buffer.from?p=t:\"function\"===typeof Blob&&\"function\"===typeof URL&&\"function\"===typeof URL.createObjectURL&&(p=u);k.prototype.decode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to decode: the 'stream' option is unsupported.\");\na=a instanceof Uint8Array?a:a.buffer instanceof ArrayBuffer?new Uint8Array(a.buffer):new Uint8Array(a);return p(a)};l.TextEncoder=m;l.TextDecoder=k})(\"undefined\"!==typeof window?window:\"undefined\"!==typeof global?global:this);\n","// Polyfill TextEncoder for MS Edge\nrequire('fast-text-encoding')\n\nmodule.exports = {\n  encode: string => new TextEncoder().encode(string),\n  decode: buffer => new TextDecoder().decode(buffer)\n};\n","module.exports = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout;\n  return function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      if (!callNow) {\n        return fn.apply(context, args);\n      }\n    }, wait);\n\n    if (callNow) {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n","module.exports = once;\n\n/*\nlet i = 0;\nconst getFirst = once(() => ++i);\ngetFirst(); // 1\ngetFirst(); // 1\n*/\n\nfunction once(fn) {\n  var called, value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('expected a function but got ' + fn);\n  }\n\n  return function wrap() {\n    if (called) {\n      return value;\n    }\n    called = true;\n    value = fn.apply(this, arguments);\n    return value;\n  };\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as path from \"path\";\nimport * as vscode from \"vscode\";\nimport { MemFS } from \"./memFSProvider\";\nimport { NativeFS } from \"./nativeFSProvider\";\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport async function activate(context: vscode.ExtensionContext) {\n  // Use the console to output diagnostic information (console.log) and errors (console.error)\n  // This line of code will only be executed once when your extension is activated\n  const nativeFS = new NativeFS();\n  context.subscriptions.push(\n    vscode.workspace.registerFileSystemProvider(\"nativefs\", nativeFS, {\n      isCaseSensitive: true,\n      isReadonly: false,\n    })\n  );\n\n  const memFS = new MemFS();\n  context.subscriptions.push(\n    vscode.workspace.registerFileSystemProvider(\"memfs\", memFS, {\n      isCaseSensitive: true,\n      isReadonly: false,\n    })\n  );\n\n  const encoder = new TextEncoder();\n\n  // Always create memfs:/Welcome directory\n  const welcomeDirectoryUri = vscode.Uri.parse(`memfs:/Welcome/`);\n  const welcomeREADMEUri = vscode.Uri.parse(`memfs:/Welcome/README.md`);\n  const workspaceFileUri = vscode.Uri.parse(`memfs:/web-fs.code-workspace`);\n  try {\n    await memFS.createDirectory(welcomeDirectoryUri);\n  } catch (_) {}\n\n  // Add README.md to /Welcome\n  if (!(await memFS.exists(welcomeREADMEUri))) {\n    await memFS.writeFile(\n      welcomeREADMEUri,\n      encoder.encode(\n        `# Welcome! (Experiment)\nPlease open **Command Palette** then run: \n\n* \\`NativeFS: Open Folder\\` command to open a local folder on your device.  \n* \\`MemFS: Open Folder\\` command to create/open a temporary folder in memory. \n\nEnjoy!`\n      ),\n      {\n        create: true,\n        overwrite: true,\n      }\n    );\n  }\n  // Initialize the workspaceFile\n  if (!(await memFS.exists(workspaceFileUri))) {\n    await memFS.writeFile(\n      workspaceFileUri,\n      encoder.encode(\n        `{\n        \"folders\": ${JSON.stringify([welcomeDirectoryUri])}\n      }`\n      ),\n      {\n        create: true,\n        overwrite: true,\n      }\n    );\n  }\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with registerCommand\n  // The commandId parameter must match the command field in package.json\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"nativefs.openFolder\", async () => {\n      try {\n        const directoryPath:\n          | string\n          | undefined = await vscode.commands.executeCommand(\n          \"nativeFS.showDirectoryPicker\"\n        );\n        if (!directoryPath) {\n          return vscode.window.showErrorMessage(`Failed to open folder`);\n        }\n        vscode.workspace.updateWorkspaceFolders(\n          vscode.workspace.workspaceFolders\n            ? vscode.workspace.workspaceFolders.length\n            : 0,\n          null,\n          {\n            uri: vscode.Uri.parse(`nativefs:${directoryPath}`),\n            name: path.basename(directoryPath),\n          }\n        );\n      } catch (error) {\n        console.error(error);\n        vscode.window.showErrorMessage(\n          \"Your environment doesn't support the Native File System API\"\n        );\n      }\n    })\n  );\n\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"memfs.openFolder\", async (_) => {\n      const name = await vscode.window.showInputBox({\n        value: \"Welcome\",\n        placeHolder: \"Please enter the folder name\",\n      });\n      if (!name) {\n        vscode.window.showErrorMessage(`Empty folder name is not supported`);\n      }\n      try {\n        await memFS.createDirectory(vscode.Uri.parse(`memfs:/${name}`));\n      } catch (_) {}\n\n      const state = vscode.workspace.updateWorkspaceFolders(0, 0, {\n        uri: vscode.Uri.parse(`memfs:/${name}`),\n        name: name,\n      });\n    })\n  );\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from \"path\";\nimport * as vscode from \"vscode\";\nconst LightningFS = require(\"@isomorphic-git/lightning-fs\");\n\ninterface FSStat {\n  type: \"file\" | \"dir\";\n  mtimeMs: number;\n  ctimeMs: number;\n  size: number;\n  isFile: () => boolean;\n  isDirectory: () => boolean;\n  isSymbolicLink: () => boolean;\n}\n\nexport class MemFS implements vscode.FileSystemProvider {\n  private pfs: any;\n  constructor() {\n    const fs: any = new LightningFS(\"fs\");\n    this.pfs = fs.promises;\n  }\n\n  // --- manage file metadata\n\n  async stat(uri: vscode.Uri): Promise<vscode.FileStat> {\n    try {\n      const fstat: FSStat = await this.pfs.stat(uri.path);\n      const stat: vscode.FileStat = {\n        type: fstat.isDirectory()\n          ? vscode.FileType.Directory\n          : fstat.isFile()\n          ? vscode.FileType.File\n          : fstat.isSymbolicLink()\n          ? vscode.FileType.SymbolicLink\n          : vscode.FileType.Unknown,\n        size: fstat.size,\n        mtime: fstat.mtimeMs,\n        ctime: fstat.ctimeMs,\n      };\n      return stat;\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  async readDirectory(uri: vscode.Uri): Promise<[string, vscode.FileType][]> {\n    const files = await this.pfs.readdir(uri.path);\n    const result: [string, vscode.FileType][] = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const stat = await this.stat(\n        vscode.Uri.parse(`memfs:${path.join(uri.path, file)}`)\n      );\n      result.push([file, stat.type]);\n    }\n    return result;\n  }\n\n  // --- manage file contents\n\n  async readFile(uri: vscode.Uri): Promise<Uint8Array> {\n    try {\n      return await this.pfs.readFile(uri.path);\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  async writeFile(\n    uri: vscode.Uri,\n    content: Uint8Array,\n    options: { create: boolean; overwrite: boolean }\n  ): Promise<void> {\n    const dirname = uri.with({ path: path.posix.dirname(uri.path) });\n    try {\n      let stat: vscode.FileStat | undefined;\n      try {\n        stat = await this.stat(uri);\n      } catch (error) {\n        stat = undefined;\n      }\n\n      if (stat && stat.type === vscode.FileType.Directory) {\n        throw vscode.FileSystemError.FileIsADirectory(uri);\n      }\n      if (!stat && !options.create) {\n        throw vscode.FileSystemError.FileNotFound(uri);\n      }\n      if (stat && options.create && !options.overwrite) {\n        throw vscode.FileSystemError.FileExists(uri);\n      }\n      await this.pfs.writeFile(uri.path, content);\n      if (!stat) {\n        this._fireSoon({ type: vscode.FileChangeType.Changed, uri: dirname });\n        this._fireSoon({ type: vscode.FileChangeType.Created, uri });\n      }\n      this._fireSoon({ type: vscode.FileChangeType.Changed, uri });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // --- manage files/folders\n\n  async rename(\n    oldUri: vscode.Uri,\n    newUri: vscode.Uri,\n    options: { overwrite: boolean }\n  ): Promise<void> {\n    let newUriStat: vscode.FileStat | undefined;\n    try {\n      newUriStat = await this.stat(newUri);\n    } catch (error) {\n      newUriStat = undefined;\n    }\n    if (!options.overwrite && newUriStat) {\n      throw vscode.FileSystemError.FileExists(newUri);\n    }\n\n    if (newUriStat && newUriStat.type === vscode.FileType.Directory) {\n      await this.mkdirp(newUri);\n    } else {\n      await this.mkdirp(\n        vscode.Uri.parse(`memfs:${path.posix.dirname(newUri.path)}`)\n      );\n    }\n\n    const data = await this.readFile(oldUri);\n    await this.writeFile(newUri, data, {\n      create: true,\n      overwrite: options.overwrite,\n    });\n    await this.delete(oldUri);\n    /*\n    this._fireSoon(\n      { type: vscode.FileChangeType.Deleted, uri: oldUri },\n      { type: vscode.FileChangeType.Created, uri: newUri }\n    );\n    */\n  }\n\n  async exists(uri: vscode.Uri): Promise<boolean> {\n    try {\n      const exists = !!(await this.pfs.stat(uri.path));\n      return exists;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async mkdirp(dirPath: vscode.Uri): Promise<void> {\n    if (await this.exists(dirPath)) {\n      return;\n    } else {\n      await this.mkdirp(\n        vscode.Uri.parse(`memfs:${path.posix.dirname(dirPath.path)}`)\n      );\n      await this.mkdir(dirPath);\n      this._fireSoon(\n        {\n          type: vscode.FileChangeType.Changed,\n          uri: vscode.Uri.parse(`memfs:${path.posix.dirname(dirPath.path)}`),\n        },\n        {\n          type: vscode.FileChangeType.Created,\n          uri: vscode.Uri.parse(`memfs:${dirPath}`),\n        }\n      );\n    }\n  }\n\n  async mkdir(uri: vscode.Uri): Promise<void> {\n    await this.pfs.mkdir(uri.path, \"0777\");\n  }\n\n  async delete(uri: vscode.Uri): Promise<void> {\n    let stat: vscode.FileStat | undefined;\n    try {\n      stat = await this.stat(uri);\n    } catch (error) {\n      stat = undefined;\n    }\n    if (!stat) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n    if (stat.type === vscode.FileType.Directory) {\n      await this.rmdir(uri.path);\n    } else {\n      await this.unlink(uri.path);\n    }\n  }\n\n  async unlink(filePath: string) {\n    await this.pfs.unlink(filePath);\n    this._fireSoon(\n      {\n        type: vscode.FileChangeType.Changed,\n        uri: vscode.Uri.parse(`memfs:${path.posix.dirname(filePath)}`),\n      },\n      {\n        uri: vscode.Uri.parse(`memfs:${filePath}`),\n        type: vscode.FileChangeType.Deleted,\n      }\n    );\n  }\n\n  async rmdir(dirPath: string): Promise<void> {\n    const files = await this.pfs.readdir(dirPath);\n    const promises = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const filePath = path.resolve(dirPath, file);\n      const stat = await this.pfs.stat(filePath);\n      if (stat.isDirectory()) {\n        promises.push(this.rmdir(filePath));\n      } else {\n        promises.push(this.unlink(filePath));\n      }\n    }\n    await Promise.all(promises);\n    await this.pfs.rmdir(dirPath);\n\n    this._fireSoon(\n      {\n        type: vscode.FileChangeType.Changed,\n        uri: vscode.Uri.parse(`memfs:${path.posix.dirname(dirPath)}`),\n      },\n      {\n        uri: vscode.Uri.parse(`memfs:${dirPath}`),\n        type: vscode.FileChangeType.Deleted,\n      }\n    );\n  }\n\n  async createDirectory(uri: vscode.Uri): Promise<void> {\n    try {\n      await this.mkdirp(uri);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // --- manage file events\n\n  private _emitter = new vscode.EventEmitter<vscode.FileChangeEvent[]>();\n  private _bufferedEvents: vscode.FileChangeEvent[] = [];\n  private _fireSoonHandle?: NodeJS.Timer;\n\n  readonly onDidChangeFile: vscode.Event<vscode.FileChangeEvent[]> = this\n    ._emitter.event;\n\n  watch(_resource: vscode.Uri): vscode.Disposable {\n    // ignore, fires for all changes...\n    return new vscode.Disposable(() => {});\n  }\n\n  private _fireSoon(...events: vscode.FileChangeEvent[]): void {\n    this._bufferedEvents.push(...events);\n\n    if (this._fireSoonHandle) {\n      clearTimeout(this._fireSoonHandle);\n    }\n\n    this._fireSoonHandle = setTimeout(() => {\n      this._emitter.fire(this._bufferedEvents);\n      this._bufferedEvents.length = 0;\n    }, 5);\n  }\n}\n","/**\n * File System Provider for Native File System\n * Referred from https://github.com/microsoft/vscode-extension-samples/blob/main/fsprovider-sample/src/fileSystemProvider.ts\n */\n\nimport * as vscode from \"vscode\";\n\nexport class NativeFS implements vscode.FileSystemProvider {\n  // --- manage file metadata\n\n  public async stat(uri: vscode.Uri): Promise<vscode.FileStat> {\n    try {\n      const result:\n        | vscode.FileStat\n        | undefined = await vscode.commands.executeCommand(\n        \"nativeFS.stat\",\n        uri\n      );\n      if (!result) {\n        throw vscode.FileSystemError.FileNotFound(uri);\n      } else {\n        return result;\n      }\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  public async readDirectory(\n    uri: vscode.Uri\n  ): Promise<[string, vscode.FileType][]> {\n    try {\n      const result:\n        | [string, vscode.FileType][]\n        | undefined = await vscode.commands.executeCommand(\n        \"nativeFS.readDirectory\",\n        uri\n      );\n      if (!result) {\n        throw vscode.FileSystemError.FileNotFound(uri);\n      } else {\n        return result;\n      }\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  // --- manage file contents\n\n  public async readFile(uri: vscode.Uri): Promise<Uint8Array> {\n    try {\n      const result: number[] | undefined = await vscode.commands.executeCommand(\n        \"nativeFS.readFile\",\n        uri\n      );\n      if (!result) {\n        throw vscode.FileSystemError.FileNotFound(uri);\n      } else {\n        return Uint8Array.from(result);\n      }\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  public async writeFile(\n    uri: vscode.Uri,\n    content: Uint8Array,\n    options: { create: boolean; overwrite: boolean }\n  ): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.writeFile\",\n      uri,\n      Array.from(content),\n      options\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  // --- manage files/folders\n\n  public async rename(\n    oldUri: vscode.Uri,\n    newUri: vscode.Uri,\n    options: { overwrite: boolean }\n  ): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.rename\",\n      oldUri,\n      newUri,\n      options\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  public async delete(\n    uri: vscode.Uri,\n    options: { recursive: boolean }\n  ): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.delete\",\n      uri,\n      options\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  public async createDirectory(uri: vscode.Uri): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.createDirectory\",\n      uri\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  private _emitter = new vscode.EventEmitter<vscode.FileChangeEvent[]>();\n  private _bufferedEvents: vscode.FileChangeEvent[] = [];\n  private _fireSoonHandle?: NodeJS.Timer;\n\n  readonly onDidChangeFile: vscode.Event<vscode.FileChangeEvent[]> = this\n    ._emitter.event;\n\n  watch(_resource: vscode.Uri): vscode.Disposable {\n    // ignore, fires for all changes...\n    return new vscode.Disposable(() => {});\n  }\n\n  private _fireSoon(...events: vscode.FileChangeEvent[]): void {\n    this._bufferedEvents.push(...events);\n\n    if (this._fireSoonHandle) {\n      clearTimeout(this._fireSoonHandle);\n    }\n\n    this._fireSoonHandle = setTimeout(() => {\n      this._emitter.fire(this._bufferedEvents);\n      this._bufferedEvents.length = 0;\n    }, 5);\n  }\n}\n","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"sourceRoot":""}