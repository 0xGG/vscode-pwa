{"version":3,"sources":["webpack://vscode-web-fs/webpack/universalModuleDefinition","webpack://vscode-web-fs/./node_modules/path-browserify/index.js","webpack://vscode-web-fs/./src/extension.ts","webpack://vscode-web-fs/./src/memFSProvider.ts","webpack://vscode-web-fs/./src/nativeFSProvider.ts","webpack://vscode-web-fs/external \"vscode\"","webpack://vscode-web-fs/webpack/bootstrap","webpack://vscode-web-fs/webpack/startup"],"names":["root","factory","exports","module","define","amd","a","i","self","assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","base","name","_format","parse","ret","delimiter","win32","context","nativeFS","NativeFS","subscriptions","push","vscode","workspace","registerFileSystemProvider","isCaseSensitive","isReadonly","memFS","MemFS","commands","registerCommand","directoryPath","executeCommand","window","showErrorMessage","updateWorkspaceFolders","workspaceFolders","uri","Uri","error","console","_","showInputBox","value","placeHolder","createDirectory","some","f","scheme","encoder","TextEncoder","writeFile","encode","create","overwrite","File","this","type","FileType","ctime","Date","now","mtime","size","Directory","entries","Map","_emitter","EventEmitter","_bufferedEvents","onDidChangeFile","event","_lookup","entry","_lookupAsDirectory","result","child","data","_lookupAsFile","FileSystemError","FileNotFound","content","options","parent","_lookupParentDirectory","get","FileIsADirectory","FileExists","set","_fireSoon","FileChangeType","Created","byteLength","Changed","oldUri","newUri","oldParent","newParent","newName","delete","Deleted","with","has","silent","parts","split","part","FileNotADirectory","_resource","Disposable","events","_fireSoonHandle","clearTimeout","setTimeout","fire","Uint8Array","Array","forEach","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"mappings":"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","file":"extension.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as path from \"path\";\nimport * as vscode from \"vscode\";\nimport { MemFS } from \"./memFSProvider\";\nimport { NativeFS } from \"./nativeFSProvider\";\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  // Use the console to output diagnostic information (console.log) and errors (console.error)\n  // This line of code will only be executed once when your extension is activated\n  const nativeFS = new NativeFS();\n  context.subscriptions.push(\n    vscode.workspace.registerFileSystemProvider(\"nativefs\", nativeFS, {\n      isCaseSensitive: true,\n      isReadonly: false,\n    })\n  );\n\n  const memFS = new MemFS();\n  context.subscriptions.push(\n    vscode.workspace.registerFileSystemProvider(\"memfs\", memFS, {\n      isCaseSensitive: true,\n      isReadonly: false,\n    })\n  );\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with registerCommand\n  // The commandId parameter must match the command field in package.json\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"nativefs.openFolder\", async () => {\n      try {\n        const directoryPath:\n          | string\n          | undefined = await vscode.commands.executeCommand(\n          \"nativeFS.showDirectoryPicker\"\n        );\n        if (!directoryPath) {\n          return vscode.window.showErrorMessage(`Failed to open folder`);\n        }\n        vscode.workspace.updateWorkspaceFolders(\n          vscode.workspace.workspaceFolders\n            ? vscode.workspace.workspaceFolders.length\n            : 0,\n          null,\n          {\n            uri: vscode.Uri.parse(`nativefs:${directoryPath}`),\n            name: path.basename(directoryPath),\n          }\n        );\n      } catch (error) {\n        console.error(error);\n        vscode.window.showErrorMessage(\n          \"Your environment doesn't support the Native File System API\"\n        );\n      }\n    })\n  );\n\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"memfs.openFolder\", async (_) => {\n      const name = await vscode.window.showInputBox({\n        value: \"Welcome\",\n        placeHolder: \"Please enter the folder name\",\n      });\n      if (!name) {\n        vscode.window.showErrorMessage(`Empty folder name is not supported`);\n      }\n      try {\n        memFS.createDirectory(vscode.Uri.parse(`memfs:/${name}`));\n      } catch (_) {}\n\n      const state = vscode.workspace.updateWorkspaceFolders(0, 0, {\n        uri: vscode.Uri.parse(`memfs:/${name}`),\n        name: name,\n      });\n    })\n  );\n\n  // Always create memfs:/Welcome directory\n  try {\n    memFS.createDirectory(vscode.Uri.parse(`memfs:/Welcome`));\n  } catch (_) {}\n  if (\n    vscode.workspace.workspaceFolders?.some(\n      (f) => f.uri.scheme === \"memfs\" && f.uri.path === \"/Welcome\"\n    )\n  ) {\n    const encoder = new TextEncoder();\n    memFS.writeFile(\n      vscode.Uri.parse(`memfs:/Welcome/README.md`),\n      encoder.encode(`# Welcome! (Experiment)\n\nPlease open **Command Palette** then run: \n\n* \\`NativeFS: Open Folder\\` command to open a local folder on your device.  \n* \\`MemFS: Open Folder\\` command to create/open a temporary folder in memory. \n\nEmjoy!`),\n      {\n        create: true,\n        overwrite: false,\n      }\n    );\n  }\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from \"path\";\nimport * as vscode from \"vscode\";\n\nexport class File implements vscode.FileStat {\n  type: vscode.FileType;\n  ctime: number;\n  mtime: number;\n  size: number;\n\n  name: string;\n  data?: Uint8Array;\n\n  constructor(name: string) {\n    this.type = vscode.FileType.File;\n    this.ctime = Date.now();\n    this.mtime = Date.now();\n    this.size = 0;\n    this.name = name;\n  }\n}\n\nexport class Directory implements vscode.FileStat {\n  type: vscode.FileType;\n  ctime: number;\n  mtime: number;\n  size: number;\n\n  name: string;\n  entries: Map<string, File | Directory>;\n\n  constructor(name: string) {\n    this.type = vscode.FileType.Directory;\n    this.ctime = Date.now();\n    this.mtime = Date.now();\n    this.size = 0;\n    this.name = name;\n    this.entries = new Map();\n  }\n}\n\nexport type Entry = File | Directory;\n\nexport class MemFS implements vscode.FileSystemProvider {\n  root = new Directory(\"\");\n\n  // --- manage file metadata\n\n  stat(uri: vscode.Uri): vscode.FileStat {\n    return this._lookup(uri, false);\n  }\n\n  readDirectory(uri: vscode.Uri): [string, vscode.FileType][] {\n    const entry = this._lookupAsDirectory(uri, false);\n    const result: [string, vscode.FileType][] = [];\n    for (const [name, child] of entry.entries) {\n      result.push([name, child.type]);\n    }\n    return result;\n  }\n\n  // --- manage file contents\n\n  readFile(uri: vscode.Uri): Uint8Array {\n    const data = this._lookupAsFile(uri, false).data;\n    if (data) {\n      return data;\n    }\n    throw vscode.FileSystemError.FileNotFound();\n  }\n\n  writeFile(\n    uri: vscode.Uri,\n    content: Uint8Array,\n    options: { create: boolean; overwrite: boolean }\n  ): void {\n    const basename = path.posix.basename(uri.path);\n    const parent = this._lookupParentDirectory(uri);\n    let entry = parent.entries.get(basename);\n    if (entry instanceof Directory) {\n      throw vscode.FileSystemError.FileIsADirectory(uri);\n    }\n    if (!entry && !options.create) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n    if (entry && options.create && !options.overwrite) {\n      throw vscode.FileSystemError.FileExists(uri);\n    }\n    if (!entry) {\n      entry = new File(basename);\n      parent.entries.set(basename, entry);\n      this._fireSoon({ type: vscode.FileChangeType.Created, uri });\n    }\n    entry.mtime = Date.now();\n    entry.size = content.byteLength;\n    entry.data = content;\n\n    this._fireSoon({ type: vscode.FileChangeType.Changed, uri });\n  }\n\n  // --- manage files/folders\n\n  rename(\n    oldUri: vscode.Uri,\n    newUri: vscode.Uri,\n    options: { overwrite: boolean }\n  ): void {\n    if (!options.overwrite && this._lookup(newUri, true)) {\n      throw vscode.FileSystemError.FileExists(newUri);\n    }\n\n    const entry = this._lookup(oldUri, false);\n    const oldParent = this._lookupParentDirectory(oldUri);\n\n    const newParent = this._lookupParentDirectory(newUri);\n    const newName = path.posix.basename(newUri.path);\n\n    oldParent.entries.delete(entry.name);\n    entry.name = newName;\n    newParent.entries.set(newName, entry);\n\n    this._fireSoon(\n      { type: vscode.FileChangeType.Deleted, uri: oldUri },\n      { type: vscode.FileChangeType.Created, uri: newUri }\n    );\n  }\n\n  delete(uri: vscode.Uri): void {\n    const dirname = uri.with({ path: path.posix.dirname(uri.path) });\n    const basename = path.posix.basename(uri.path);\n    const parent = this._lookupAsDirectory(dirname, false);\n    if (!parent.entries.has(basename)) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n    parent.entries.delete(basename);\n    parent.mtime = Date.now();\n    parent.size -= 1;\n    this._fireSoon(\n      { type: vscode.FileChangeType.Changed, uri: dirname },\n      { uri, type: vscode.FileChangeType.Deleted }\n    );\n  }\n\n  createDirectory(uri: vscode.Uri): void {\n    const basename = path.posix.basename(uri.path);\n    const dirname = uri.with({ path: path.posix.dirname(uri.path) });\n    const parent = this._lookupAsDirectory(dirname, false);\n\n    const entry = new Directory(basename);\n    parent.entries.set(entry.name, entry);\n    parent.mtime = Date.now();\n    parent.size += 1;\n    this._fireSoon(\n      { type: vscode.FileChangeType.Changed, uri: dirname },\n      { type: vscode.FileChangeType.Created, uri }\n    );\n  }\n\n  // --- lookup\n\n  private _lookup(uri: vscode.Uri, silent: false): Entry;\n  private _lookup(uri: vscode.Uri, silent: boolean): Entry | undefined;\n  private _lookup(uri: vscode.Uri, silent: boolean): Entry | undefined {\n    const parts = uri.path.split(\"/\");\n    let entry: Entry = this.root;\n    for (const part of parts) {\n      if (!part) {\n        continue;\n      }\n      let child: Entry | undefined;\n      if (entry instanceof Directory) {\n        child = entry.entries.get(part);\n      }\n      if (!child) {\n        if (!silent) {\n          throw vscode.FileSystemError.FileNotFound(uri);\n        } else {\n          return undefined;\n        }\n      }\n      entry = child;\n    }\n    return entry;\n  }\n\n  private _lookupAsDirectory(uri: vscode.Uri, silent: boolean): Directory {\n    const entry = this._lookup(uri, silent);\n    if (entry instanceof Directory) {\n      return entry;\n    }\n    throw vscode.FileSystemError.FileNotADirectory(uri);\n  }\n\n  private _lookupAsFile(uri: vscode.Uri, silent: boolean): File {\n    const entry = this._lookup(uri, silent);\n    if (entry instanceof File) {\n      return entry;\n    }\n    throw vscode.FileSystemError.FileIsADirectory(uri);\n  }\n\n  private _lookupParentDirectory(uri: vscode.Uri): Directory {\n    const dirname = uri.with({ path: path.posix.dirname(uri.path) });\n    return this._lookupAsDirectory(dirname, false);\n  }\n\n  // --- manage file events\n\n  private _emitter = new vscode.EventEmitter<vscode.FileChangeEvent[]>();\n  private _bufferedEvents: vscode.FileChangeEvent[] = [];\n  private _fireSoonHandle?: NodeJS.Timer;\n\n  readonly onDidChangeFile: vscode.Event<vscode.FileChangeEvent[]> = this\n    ._emitter.event;\n\n  watch(_resource: vscode.Uri): vscode.Disposable {\n    // ignore, fires for all changes...\n    return new vscode.Disposable(() => {});\n  }\n\n  private _fireSoon(...events: vscode.FileChangeEvent[]): void {\n    this._bufferedEvents.push(...events);\n\n    if (this._fireSoonHandle) {\n      clearTimeout(this._fireSoonHandle);\n    }\n\n    this._fireSoonHandle = setTimeout(() => {\n      this._emitter.fire(this._bufferedEvents);\n      this._bufferedEvents.length = 0;\n    }, 5);\n  }\n}\n","/**\n * File System Provider for Native File System\n * Referred from https://github.com/microsoft/vscode-extension-samples/blob/main/fsprovider-sample/src/fileSystemProvider.ts\n */\n\nimport * as vscode from \"vscode\";\n\nexport class NativeFS implements vscode.FileSystemProvider {\n  // --- manage file metadata\n\n  public async stat(uri: vscode.Uri): Promise<vscode.FileStat> {\n    try {\n      const result:\n        | vscode.FileStat\n        | undefined = await vscode.commands.executeCommand(\n        \"nativeFS.stat\",\n        uri\n      );\n      if (!result) {\n        throw vscode.FileSystemError.FileNotFound(uri);\n      } else {\n        return result;\n      }\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  public async readDirectory(\n    uri: vscode.Uri\n  ): Promise<[string, vscode.FileType][]> {\n    try {\n      const result:\n        | [string, vscode.FileType][]\n        | undefined = await vscode.commands.executeCommand(\n        \"nativeFS.readDirectory\",\n        uri\n      );\n      if (!result) {\n        throw vscode.FileSystemError.FileNotFound(uri);\n      } else {\n        return result;\n      }\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  // --- manage file contents\n\n  public async readFile(uri: vscode.Uri): Promise<Uint8Array> {\n    try {\n      const result: number[] | undefined = await vscode.commands.executeCommand(\n        \"nativeFS.readFile\",\n        uri\n      );\n      if (!result) {\n        throw vscode.FileSystemError.FileNotFound(uri);\n      } else {\n        return Uint8Array.from(result);\n      }\n    } catch (error) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n  }\n\n  public async writeFile(\n    uri: vscode.Uri,\n    content: Uint8Array,\n    options: { create: boolean; overwrite: boolean }\n  ): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.writeFile\",\n      uri,\n      Array.from(content),\n      options\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  // --- manage files/folders\n\n  public async rename(\n    oldUri: vscode.Uri,\n    newUri: vscode.Uri,\n    options: { overwrite: boolean }\n  ): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.rename\",\n      oldUri,\n      newUri,\n      options\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  public async delete(\n    uri: vscode.Uri,\n    options: { recursive: boolean }\n  ): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.delete\",\n      uri,\n      options\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  public async createDirectory(uri: vscode.Uri): Promise<void> {\n    const { events } = (await vscode.commands.executeCommand(\n      \"nativeFS.createDirectory\",\n      uri\n    )) || { events: [] };\n    if (events) {\n      (events || []).forEach((event: vscode.FileChangeEvent) => {\n        this._fireSoon(event);\n      });\n    }\n  }\n\n  private _emitter = new vscode.EventEmitter<vscode.FileChangeEvent[]>();\n  private _bufferedEvents: vscode.FileChangeEvent[] = [];\n  private _fireSoonHandle?: NodeJS.Timer;\n\n  readonly onDidChangeFile: vscode.Event<vscode.FileChangeEvent[]> = this\n    ._emitter.event;\n\n  watch(_resource: vscode.Uri): vscode.Disposable {\n    // ignore, fires for all changes...\n    return new vscode.Disposable(() => {});\n  }\n\n  private _fireSoon(...events: vscode.FileChangeEvent[]): void {\n    this._bufferedEvents.push(...events);\n\n    if (this._fireSoonHandle) {\n      clearTimeout(this._fireSoonHandle);\n    }\n\n    this._fireSoonHandle = setTimeout(() => {\n      this._emitter.fire(this._bufferedEvents);\n      this._bufferedEvents.length = 0;\n    }, 5);\n  }\n}\n","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"sourceRoot":""}